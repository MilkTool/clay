// automatically generated by clay-bindgen

alias __u_char = CUChar;

alias __u_short = CUShort;

alias __u_int = CUInt;

alias __u_long = CULong;

alias __int8_t = CChar;

alias __uint8_t = CUChar;

alias __int16_t = CShort;

alias __uint16_t = CUShort;

alias __int32_t = CInt;

alias __uint32_t = CUInt;

alias __int64_t = CLong;

alias __uint64_t = CULong;

alias __quad_t = CLong;

alias __u_quad_t = CULong;

alias __dev_t = CULong;

alias __uid_t = CUInt;

alias __gid_t = CUInt;

alias __ino_t = CULong;

alias __ino64_t = CULong;

alias __mode_t = CUInt;

alias __nlink_t = CULong;

alias __off_t = CLong;

alias __off64_t = CLong;

alias __pid_t = CInt;

record __fsid_t (
    __val : Array[CInt, 2],
);

alias __clock_t = CLong;

alias __rlim_t = CULong;

alias __rlim64_t = CULong;

alias __id_t = CUInt;

alias __time_t = CLong;

alias __useconds_t = CUInt;

alias __suseconds_t = CLong;

alias __daddr_t = CInt;

alias __swblk_t = CLong;

alias __key_t = CInt;

alias __clockid_t = CInt;

alias __timer_t = OpaquePointer;

alias __blksize_t = CLong;

alias __blkcnt_t = CLong;

alias __blkcnt64_t = CLong;

alias __fsblkcnt_t = CULong;

alias __fsblkcnt64_t = CULong;

alias __fsfilcnt_t = CULong;

alias __fsfilcnt64_t = CULong;

alias __fsword_t = CLong;

alias __ssize_t = CLong;

alias __syscall_slong_t = CLong;

alias __syscall_ulong_t = CULong;

alias __loff_t = __off64_t;

alias __qaddr_t = Pointer[__quad_t];

alias __caddr_t = Pointer[CChar];

alias __intptr_t = CLong;

alias __socklen_t = CUInt;

alias ssize_t = __ssize_t;

alias ptrdiff_t = CLong;

alias size_t = CULong;

alias wchar_t = CInt;

alias gid_t = __gid_t;

alias uid_t = __uid_t;

alias off_t = __off_t;

alias useconds_t = __useconds_t;

alias pid_t = __pid_t;

alias intptr_t = __intptr_t;

alias socklen_t = __socklen_t;

external (cdecl) access(arg0:Pointer[CChar], arg1:CInt) : CInt;

external (cdecl) faccessat(arg0:CInt, arg1:Pointer[CChar], arg2:CInt, arg3:CInt) : CInt;

external (cdecl) lseek(arg0:CInt, arg1:__off_t, arg2:CInt) : __off_t;

external (cdecl) close(arg0:CInt) : CInt;

external (cdecl) read(arg0:CInt, arg1:OpaquePointer, arg2:size_t) : ssize_t;

external (cdecl) write(arg0:CInt, arg1:OpaquePointer, arg2:size_t) : ssize_t;

external (cdecl) pread(arg0:CInt, arg1:OpaquePointer, arg2:size_t, arg3:__off_t) : ssize_t;

external (cdecl) pwrite(arg0:CInt, arg1:OpaquePointer, arg2:size_t, arg3:__off_t) : ssize_t;

external (cdecl) pipe(arg0:Pointer[CInt]) : CInt;

external (cdecl) alarm(arg0:CUInt) : CUInt;

external (cdecl) sleep(arg0:CUInt) : CUInt;

external (cdecl) ualarm(arg0:__useconds_t, arg1:__useconds_t) : __useconds_t;

external (cdecl) usleep(arg0:__useconds_t) : CInt;

external (cdecl) pause() : CInt;

external (cdecl) chown(arg0:Pointer[CChar], arg1:__uid_t, arg2:__gid_t) : CInt;

external (cdecl) fchown(arg0:CInt, arg1:__uid_t, arg2:__gid_t) : CInt;

external (cdecl) lchown(arg0:Pointer[CChar], arg1:__uid_t, arg2:__gid_t) : CInt;

external (cdecl) fchownat(arg0:CInt, arg1:Pointer[CChar], arg2:__uid_t, arg3:__gid_t, arg4:CInt) : CInt;

external (cdecl) chdir(arg0:Pointer[CChar]) : CInt;

external (cdecl) fchdir(arg0:CInt) : CInt;

external (cdecl) getcwd(arg0:Pointer[CChar], arg1:size_t) : Pointer[CChar];

external (cdecl) getwd(arg0:Pointer[CChar]) : Pointer[CChar];

external (cdecl) dup(arg0:CInt) : CInt;

external (cdecl) dup2(arg0:CInt, arg1:CInt) : CInt;

external __environ : Pointer[Pointer[CChar]];

external (cdecl) execve(arg0:Pointer[CChar], arg1:Pointer[Pointer[CChar]], arg2:Pointer[Pointer[CChar]]) : CInt;

external (cdecl) fexecve(arg0:CInt, arg1:Pointer[Pointer[CChar]], arg2:Pointer[Pointer[CChar]]) : CInt;

external (cdecl) execv(arg0:Pointer[CChar], arg1:Pointer[Pointer[CChar]]) : CInt;

external (cdecl) execle(arg0:Pointer[CChar], arg1:Pointer[CChar], ..) : CInt;

external (cdecl) execl(arg0:Pointer[CChar], arg1:Pointer[CChar], ..) : CInt;

external (cdecl) execvp(arg0:Pointer[CChar], arg1:Pointer[Pointer[CChar]]) : CInt;

external (cdecl) execlp(arg0:Pointer[CChar], arg1:Pointer[CChar], ..) : CInt;

external (cdecl) nice(arg0:CInt) : CInt;

external (cdecl) _exit(arg0:CInt) : ;




external (cdecl) pathconf(arg0:Pointer[CChar], arg1:CInt) : CLong;

external (cdecl) fpathconf(arg0:CInt, arg1:CInt) : CLong;

external (cdecl) sysconf(arg0:CInt) : CLong;

external (cdecl) confstr(arg0:CInt, arg1:Pointer[CChar], arg2:size_t) : size_t;

external (cdecl) getpid() : __pid_t;

external (cdecl) getppid() : __pid_t;

external (cdecl) getpgrp() : __pid_t;

external (cdecl) __getpgid(arg0:__pid_t) : __pid_t;

external (cdecl) getpgid(arg0:__pid_t) : __pid_t;

external (cdecl) setpgid(arg0:__pid_t, arg1:__pid_t) : CInt;

external (cdecl) setpgrp() : CInt;

external (cdecl) setsid() : __pid_t;

external (cdecl) getsid(arg0:__pid_t) : __pid_t;

external (cdecl) getuid() : __uid_t;

external (cdecl) geteuid() : __uid_t;

external (cdecl) getgid() : __gid_t;

external (cdecl) getegid() : __gid_t;

external (cdecl) getgroups(arg0:CInt, arg1:Pointer[__gid_t]) : CInt;

external (cdecl) setuid(arg0:__uid_t) : CInt;

external (cdecl) setreuid(arg0:__uid_t, arg1:__uid_t) : CInt;

external (cdecl) seteuid(arg0:__uid_t) : CInt;

external (cdecl) setgid(arg0:__gid_t) : CInt;

external (cdecl) setregid(arg0:__gid_t, arg1:__gid_t) : CInt;

external (cdecl) setegid(arg0:__gid_t) : CInt;

external (cdecl) fork() : __pid_t;

external (cdecl) vfork() : __pid_t;

external (cdecl) ttyname(arg0:CInt) : Pointer[CChar];

external (cdecl) ttyname_r(arg0:CInt, arg1:Pointer[CChar], arg2:size_t) : CInt;

external (cdecl) isatty(arg0:CInt) : CInt;

external (cdecl) ttyslot() : CInt;

external (cdecl) link(arg0:Pointer[CChar], arg1:Pointer[CChar]) : CInt;

external (cdecl) linkat(arg0:CInt, arg1:Pointer[CChar], arg2:CInt, arg3:Pointer[CChar], arg4:CInt) : CInt;

external (cdecl) symlink(arg0:Pointer[CChar], arg1:Pointer[CChar]) : CInt;

external (cdecl) readlink(arg0:Pointer[CChar], arg1:Pointer[CChar], arg2:size_t) : ssize_t;

external (cdecl) symlinkat(arg0:Pointer[CChar], arg1:CInt, arg2:Pointer[CChar]) : CInt;

external (cdecl) readlinkat(arg0:CInt, arg1:Pointer[CChar], arg2:Pointer[CChar], arg3:size_t) : ssize_t;

external (cdecl) unlink(arg0:Pointer[CChar]) : CInt;

external (cdecl) unlinkat(arg0:CInt, arg1:Pointer[CChar], arg2:CInt) : CInt;

external (cdecl) rmdir(arg0:Pointer[CChar]) : CInt;

external (cdecl) tcgetpgrp(arg0:CInt) : __pid_t;

external (cdecl) tcsetpgrp(arg0:CInt, arg1:__pid_t) : CInt;

external (cdecl) getlogin() : Pointer[CChar];

external (cdecl) getlogin_r(arg0:Pointer[CChar], arg1:size_t) : CInt;

external (cdecl) setlogin(arg0:Pointer[CChar]) : CInt;

external optarg : Pointer[CChar];

external optind : CInt;

external opterr : CInt;

external optopt : CInt;

external (cdecl) getopt(arg0:CInt, arg1:Pointer[Pointer[CChar]], arg2:Pointer[CChar]) : CInt;

external (cdecl) gethostname(arg0:Pointer[CChar], arg1:size_t) : CInt;

external (cdecl) sethostname(arg0:Pointer[CChar], arg1:size_t) : CInt;

external (cdecl) sethostid(arg0:CLong) : CInt;

external (cdecl) getdomainname(arg0:Pointer[CChar], arg1:size_t) : CInt;

external (cdecl) setdomainname(arg0:Pointer[CChar], arg1:size_t) : CInt;

external (cdecl) vhangup() : CInt;

external (cdecl) revoke(arg0:Pointer[CChar]) : CInt;

external (cdecl) profil(arg0:Pointer[CUShort], arg1:size_t, arg2:size_t, arg3:CUInt) : CInt;

external (cdecl) acct(arg0:Pointer[CChar]) : CInt;

external (cdecl) getusershell() : Pointer[CChar];

external (cdecl) endusershell() : ;

external (cdecl) setusershell() : ;

external (cdecl) daemon(arg0:CInt, arg1:CInt) : CInt;

external (cdecl) chroot(arg0:Pointer[CChar]) : CInt;

external (cdecl) getpass(arg0:Pointer[CChar]) : Pointer[CChar];

external (cdecl) fsync(arg0:CInt) : CInt;

external (cdecl) gethostid() : CLong;

external (cdecl) sync() : ;

external (cdecl) getpagesize() : CInt;

external (cdecl) getdtablesize() : CInt;

external (cdecl) truncate(arg0:Pointer[CChar], arg1:__off_t) : CInt;

external (cdecl) ftruncate(arg0:CInt, arg1:__off_t) : CInt;

external (cdecl) brk(arg0:OpaquePointer) : CInt;

external (cdecl) sbrk(arg0:intptr_t) : OpaquePointer;

external (cdecl) syscall(arg0:CLong, ..) : CLong;

external (cdecl) lockf(arg0:CInt, arg1:CInt, arg2:__off_t) : CInt;

external (cdecl) fdatasync(arg0:CInt) : CInt;

external (cdecl) __errno_location() : Pointer[CInt];

external (cdecl) __bswap_32(arg0:CUInt) : CUInt;

external (cdecl) __bswap_64(arg0:CULongLong) : CULongLong;

alias time_t = __time_t;

record Struct_timespec (
    tv_sec : __time_t,
    tv_nsec : __syscall_slong_t,
);

record Struct_sched_param (
    __sched_priority : CInt,
);

record Struct___sched_param (
    __sched_priority : CInt,
);

alias __cpu_mask = CULong;

record cpu_set_t (
    __bits : Array[__cpu_mask, 16],
);

external (cdecl) __sched_cpucount(arg0:size_t, arg1:Pointer[cpu_set_t]) : CInt;

external (cdecl) __sched_cpualloc(arg0:size_t) : Pointer[cpu_set_t];

external (cdecl) __sched_cpufree(arg0:Pointer[cpu_set_t]) : ;

external (cdecl) sched_setparam(arg0:__pid_t, arg1:Pointer[Struct_sched_param]) : CInt;

external (cdecl) sched_getparam(arg0:__pid_t, arg1:Pointer[Struct_sched_param]) : CInt;

external (cdecl) sched_setscheduler(arg0:__pid_t, arg1:CInt, arg2:Pointer[Struct_sched_param]) : CInt;

external (cdecl) sched_getscheduler(arg0:__pid_t) : CInt;

external (cdecl) sched_yield() : CInt;

external (cdecl) sched_get_priority_max(arg0:CInt) : CInt;

external (cdecl) sched_get_priority_min(arg0:CInt) : CInt;

external (cdecl) sched_rr_get_interval(arg0:__pid_t, arg1:Pointer[Struct_timespec]) : CInt;

alias clock_t = __clock_t;

alias clockid_t = __clockid_t;

alias timer_t = __timer_t;

record Struct_tm (
    tm_sec : CInt,
    tm_min : CInt,
    tm_hour : CInt,
    tm_mday : CInt,
    tm_mon : CInt,
    tm_year : CInt,
    tm_wday : CInt,
    tm_yday : CInt,
    tm_isdst : CInt,
    tm_gmtoff : CLong,
    tm_zone : Pointer[CChar],
);

record Struct_itimerspec (
    it_interval : Struct_timespec,
    it_value : Struct_timespec,
);

external (cdecl) clock() : clock_t;

external (cdecl) time(arg0:Pointer[time_t]) : time_t;

external (cdecl) difftime(arg0:time_t, arg1:time_t) : CDouble;

external (cdecl) mktime(arg0:Pointer[Struct_tm]) : time_t;

external (cdecl) strftime(arg0:Pointer[CChar], arg1:size_t, arg2:Pointer[CChar], arg3:Pointer[Struct_tm]) : size_t;

record Struct___locale_struct (
    __locales : Array[Pointer[Struct___locale_data], 13],
    __ctype_b : Pointer[CUShort],
    __ctype_tolower : Pointer[CInt],
    __ctype_toupper : Pointer[CInt],
    __names : Array[Pointer[CChar], 13],
);

alias Struct___locale_data = Opaque;

alias __locale_t = Pointer[Struct___locale_struct];

alias locale_t = __locale_t;

external (cdecl) strftime_l(arg0:Pointer[CChar], arg1:size_t, arg2:Pointer[CChar], arg3:Pointer[Struct_tm], arg4:__locale_t) : size_t;

external (cdecl) gmtime(arg0:Pointer[time_t]) : Pointer[Struct_tm];

external (cdecl) localtime(arg0:Pointer[time_t]) : Pointer[Struct_tm];

external (cdecl) gmtime_r(arg0:Pointer[time_t], arg1:Pointer[Struct_tm]) : Pointer[Struct_tm];

external (cdecl) localtime_r(arg0:Pointer[time_t], arg1:Pointer[Struct_tm]) : Pointer[Struct_tm];

external (cdecl) asctime(arg0:Pointer[Struct_tm]) : Pointer[CChar];

external (cdecl) ctime(arg0:Pointer[time_t]) : Pointer[CChar];

external (cdecl) asctime_r(arg0:Pointer[Struct_tm], arg1:Pointer[CChar]) : Pointer[CChar];

external (cdecl) ctime_r(arg0:Pointer[time_t], arg1:Pointer[CChar]) : Pointer[CChar];

external __tzname : Array[Pointer[CChar], 2];

external __daylight : CInt;

external __timezone : CLong;

external tzname : Array[Pointer[CChar], 2];

external (cdecl) tzset() : ;

external daylight : CInt;

external timezone : CLong;

external (cdecl) stime(arg0:Pointer[time_t]) : CInt;

external (cdecl) timegm(arg0:Pointer[Struct_tm]) : time_t;

external (cdecl) timelocal(arg0:Pointer[Struct_tm]) : time_t;

external (cdecl) dysize(arg0:CInt) : CInt;

external (cdecl) nanosleep(arg0:Pointer[Struct_timespec], arg1:Pointer[Struct_timespec]) : CInt;

external (cdecl) clock_getres(arg0:clockid_t, arg1:Pointer[Struct_timespec]) : CInt;

external (cdecl) clock_gettime(arg0:clockid_t, arg1:Pointer[Struct_timespec]) : CInt;

external (cdecl) clock_settime(arg0:clockid_t, arg1:Pointer[Struct_timespec]) : CInt;

external (cdecl) clock_nanosleep(arg0:clockid_t, arg1:CInt, arg2:Pointer[Struct_timespec], arg3:Pointer[Struct_timespec]) : CInt;

external (cdecl) clock_getcpuclockid(arg0:pid_t, arg1:Pointer[clockid_t]) : CInt;

external (cdecl) timer_create(arg0:clockid_t, arg1:Pointer[Struct_sigevent], arg2:Pointer[timer_t]) : CInt;

external (cdecl) timer_delete(arg0:timer_t) : CInt;

external (cdecl) timer_settime(arg0:timer_t, arg1:CInt, arg2:Pointer[Struct_itimerspec], arg3:Pointer[Struct_itimerspec]) : CInt;

external (cdecl) timer_gettime(arg0:timer_t, arg1:Pointer[Struct_itimerspec]) : CInt;

external (cdecl) timer_getoverrun(arg0:timer_t) : CInt;

alias pthread_t = CULong;

alias Union_pthread_attr_t = Union[
     Array[CChar, 56],
     CLong,
];

alias pthread_attr_t = Union_pthread_attr_t;

record Struct___pthread_internal_list (
    __prev : Pointer[Struct___pthread_internal_list],
    __next : Pointer[Struct___pthread_internal_list],
);

alias __pthread_list_t = Struct___pthread_internal_list;

record Struct___pthread_mutex_s (
    __lock : CInt,
    __count : CUInt,
    __owner : CInt,
    __nusers : CUInt,
    __kind : CInt,
    __spins : CInt,
    __list : __pthread_list_t,
);

alias pthread_mutex_t = Union[
     Struct___pthread_mutex_s,
     Array[CChar, 40],
     CLong,
];

alias pthread_mutexattr_t = Union[
     Array[CChar, 4],
     CInt,
];

alias pthread_cond_t = Union[
     Struct_Unnamed1,
     Array[CChar, 48],
     CLongLong,
];

alias pthread_condattr_t = Union[
     Array[CChar, 4],
     CInt,
];

alias pthread_key_t = CUInt;

alias pthread_once_t = CInt;

alias pthread_rwlock_t = Union[
     Struct_Unnamed2,
     Array[CChar, 56],
     CLong,
];

alias pthread_rwlockattr_t = Union[
     Array[CChar, 8],
     CLong,
];

alias pthread_spinlock_t = CInt;

alias pthread_barrier_t = Union[
     Array[CChar, 32],
     CLong,
];

alias pthread_barrierattr_t = Union[
     Array[CChar, 4],
     CInt,
];

alias __jmp_buf = Array[CLong, 8];









record Struct__pthread_cleanup_buffer (
    __routine : CCodePointer[[OpaquePointer],[]],
    __arg : OpaquePointer,
    __canceltype : CInt,
    __prev : Pointer[Struct__pthread_cleanup_buffer],
);



external (cdecl) pthread_create(arg0:Pointer[pthread_t], arg1:Pointer[pthread_attr_t], arg2:CCodePointer[[OpaquePointer],[OpaquePointer]], arg3:OpaquePointer) : CInt;

external (cdecl) pthread_exit(arg0:OpaquePointer) : ;

external (cdecl) pthread_join(arg0:pthread_t, arg1:Pointer[OpaquePointer]) : CInt;

external (cdecl) pthread_detach(arg0:pthread_t) : CInt;

external (cdecl) pthread_self() : pthread_t;

external (cdecl) pthread_equal(arg0:pthread_t, arg1:pthread_t) : CInt;

external (cdecl) pthread_attr_init(arg0:Pointer[pthread_attr_t]) : CInt;

external (cdecl) pthread_attr_destroy(arg0:Pointer[pthread_attr_t]) : CInt;

external (cdecl) pthread_attr_getdetachstate(arg0:Pointer[pthread_attr_t], arg1:Pointer[CInt]) : CInt;

external (cdecl) pthread_attr_setdetachstate(arg0:Pointer[pthread_attr_t], arg1:CInt) : CInt;

external (cdecl) pthread_attr_getguardsize(arg0:Pointer[pthread_attr_t], arg1:Pointer[size_t]) : CInt;

external (cdecl) pthread_attr_setguardsize(arg0:Pointer[pthread_attr_t], arg1:size_t) : CInt;

external (cdecl) pthread_attr_getschedparam(arg0:Pointer[pthread_attr_t], arg1:Pointer[Struct_sched_param]) : CInt;

external (cdecl) pthread_attr_setschedparam(arg0:Pointer[pthread_attr_t], arg1:Pointer[Struct_sched_param]) : CInt;

external (cdecl) pthread_attr_getschedpolicy(arg0:Pointer[pthread_attr_t], arg1:Pointer[CInt]) : CInt;

external (cdecl) pthread_attr_setschedpolicy(arg0:Pointer[pthread_attr_t], arg1:CInt) : CInt;

external (cdecl) pthread_attr_getinheritsched(arg0:Pointer[pthread_attr_t], arg1:Pointer[CInt]) : CInt;

external (cdecl) pthread_attr_setinheritsched(arg0:Pointer[pthread_attr_t], arg1:CInt) : CInt;

external (cdecl) pthread_attr_getscope(arg0:Pointer[pthread_attr_t], arg1:Pointer[CInt]) : CInt;

external (cdecl) pthread_attr_setscope(arg0:Pointer[pthread_attr_t], arg1:CInt) : CInt;

external (cdecl) pthread_attr_getstackaddr(arg0:Pointer[pthread_attr_t], arg1:Pointer[OpaquePointer]) : CInt;

external (cdecl) pthread_attr_setstackaddr(arg0:Pointer[pthread_attr_t], arg1:OpaquePointer) : CInt;

external (cdecl) pthread_attr_getstacksize(arg0:Pointer[pthread_attr_t], arg1:Pointer[size_t]) : CInt;

external (cdecl) pthread_attr_setstacksize(arg0:Pointer[pthread_attr_t], arg1:size_t) : CInt;

external (cdecl) pthread_attr_getstack(arg0:Pointer[pthread_attr_t], arg1:Pointer[OpaquePointer], arg2:Pointer[size_t]) : CInt;

external (cdecl) pthread_attr_setstack(arg0:Pointer[pthread_attr_t], arg1:OpaquePointer, arg2:size_t) : CInt;

external (cdecl) pthread_setschedparam(arg0:pthread_t, arg1:CInt, arg2:Pointer[Struct_sched_param]) : CInt;

external (cdecl) pthread_getschedparam(arg0:pthread_t, arg1:Pointer[CInt], arg2:Pointer[Struct_sched_param]) : CInt;

external (cdecl) pthread_setschedprio(arg0:pthread_t, arg1:CInt) : CInt;

external (cdecl) pthread_once(arg0:Pointer[pthread_once_t], arg1:CCodePointer[[],[]]) : CInt;

external (cdecl) pthread_setcancelstate(arg0:CInt, arg1:Pointer[CInt]) : CInt;

external (cdecl) pthread_setcanceltype(arg0:CInt, arg1:Pointer[CInt]) : CInt;

external (cdecl) pthread_cancel(arg0:pthread_t) : CInt;

external (cdecl) pthread_testcancel() : ;

record __pthread_unwind_buf_t (
    __cancel_jmp_buf : Array[Struct_Unnamed3, 1],
    __pad : Array[OpaquePointer, 4],
);

record Struct___pthread_cleanup_frame (
    __cancel_routine : CCodePointer[[OpaquePointer],[]],
    __cancel_arg : OpaquePointer,
    __do_it : CInt,
    __cancel_type : CInt,
);

external (cdecl) __pthread_register_cancel(arg0:Pointer[__pthread_unwind_buf_t]) : ;

external (cdecl) __pthread_unregister_cancel(arg0:Pointer[__pthread_unwind_buf_t]) : ;

external (cdecl) __pthread_unwind_next(arg0:Pointer[__pthread_unwind_buf_t]) : ;

alias Struct___jmp_buf_tag = Opaque;

external (cdecl) __sigsetjmp(arg0:Pointer[Struct___jmp_buf_tag], arg1:CInt) : CInt;

external (cdecl) pthread_mutex_init(arg0:Pointer[pthread_mutex_t], arg1:Pointer[pthread_mutexattr_t]) : CInt;

external (cdecl) pthread_mutex_destroy(arg0:Pointer[pthread_mutex_t]) : CInt;

external (cdecl) pthread_mutex_trylock(arg0:Pointer[pthread_mutex_t]) : CInt;

external (cdecl) pthread_mutex_lock(arg0:Pointer[pthread_mutex_t]) : CInt;

external (cdecl) pthread_mutex_timedlock(arg0:Pointer[pthread_mutex_t], arg1:Pointer[Struct_timespec]) : CInt;

external (cdecl) pthread_mutex_unlock(arg0:Pointer[pthread_mutex_t]) : CInt;

external (cdecl) pthread_mutex_getprioceiling(arg0:Pointer[pthread_mutex_t], arg1:Pointer[CInt]) : CInt;

external (cdecl) pthread_mutex_setprioceiling(arg0:Pointer[pthread_mutex_t], arg1:CInt, arg2:Pointer[CInt]) : CInt;

external (cdecl) pthread_mutex_consistent(arg0:Pointer[pthread_mutex_t]) : CInt;

external (cdecl) pthread_mutexattr_init(arg0:Pointer[pthread_mutexattr_t]) : CInt;

external (cdecl) pthread_mutexattr_destroy(arg0:Pointer[pthread_mutexattr_t]) : CInt;

external (cdecl) pthread_mutexattr_getpshared(arg0:Pointer[pthread_mutexattr_t], arg1:Pointer[CInt]) : CInt;

external (cdecl) pthread_mutexattr_setpshared(arg0:Pointer[pthread_mutexattr_t], arg1:CInt) : CInt;

external (cdecl) pthread_mutexattr_gettype(arg0:Pointer[pthread_mutexattr_t], arg1:Pointer[CInt]) : CInt;

external (cdecl) pthread_mutexattr_settype(arg0:Pointer[pthread_mutexattr_t], arg1:CInt) : CInt;

external (cdecl) pthread_mutexattr_getprotocol(arg0:Pointer[pthread_mutexattr_t], arg1:Pointer[CInt]) : CInt;

external (cdecl) pthread_mutexattr_setprotocol(arg0:Pointer[pthread_mutexattr_t], arg1:CInt) : CInt;

external (cdecl) pthread_mutexattr_getprioceiling(arg0:Pointer[pthread_mutexattr_t], arg1:Pointer[CInt]) : CInt;

external (cdecl) pthread_mutexattr_setprioceiling(arg0:Pointer[pthread_mutexattr_t], arg1:CInt) : CInt;

external (cdecl) pthread_mutexattr_getrobust(arg0:Pointer[pthread_mutexattr_t], arg1:Pointer[CInt]) : CInt;

external (cdecl) pthread_mutexattr_setrobust(arg0:Pointer[pthread_mutexattr_t], arg1:CInt) : CInt;

external (cdecl) pthread_rwlock_init(arg0:Pointer[pthread_rwlock_t], arg1:Pointer[pthread_rwlockattr_t]) : CInt;

external (cdecl) pthread_rwlock_destroy(arg0:Pointer[pthread_rwlock_t]) : CInt;

external (cdecl) pthread_rwlock_rdlock(arg0:Pointer[pthread_rwlock_t]) : CInt;

external (cdecl) pthread_rwlock_tryrdlock(arg0:Pointer[pthread_rwlock_t]) : CInt;

external (cdecl) pthread_rwlock_timedrdlock(arg0:Pointer[pthread_rwlock_t], arg1:Pointer[Struct_timespec]) : CInt;

external (cdecl) pthread_rwlock_wrlock(arg0:Pointer[pthread_rwlock_t]) : CInt;

external (cdecl) pthread_rwlock_trywrlock(arg0:Pointer[pthread_rwlock_t]) : CInt;

external (cdecl) pthread_rwlock_timedwrlock(arg0:Pointer[pthread_rwlock_t], arg1:Pointer[Struct_timespec]) : CInt;

external (cdecl) pthread_rwlock_unlock(arg0:Pointer[pthread_rwlock_t]) : CInt;

external (cdecl) pthread_rwlockattr_init(arg0:Pointer[pthread_rwlockattr_t]) : CInt;

external (cdecl) pthread_rwlockattr_destroy(arg0:Pointer[pthread_rwlockattr_t]) : CInt;

external (cdecl) pthread_rwlockattr_getpshared(arg0:Pointer[pthread_rwlockattr_t], arg1:Pointer[CInt]) : CInt;

external (cdecl) pthread_rwlockattr_setpshared(arg0:Pointer[pthread_rwlockattr_t], arg1:CInt) : CInt;

external (cdecl) pthread_rwlockattr_getkind_np(arg0:Pointer[pthread_rwlockattr_t], arg1:Pointer[CInt]) : CInt;

external (cdecl) pthread_rwlockattr_setkind_np(arg0:Pointer[pthread_rwlockattr_t], arg1:CInt) : CInt;

external (cdecl) pthread_cond_init(arg0:Pointer[pthread_cond_t], arg1:Pointer[pthread_condattr_t]) : CInt;

external (cdecl) pthread_cond_destroy(arg0:Pointer[pthread_cond_t]) : CInt;

external (cdecl) pthread_cond_signal(arg0:Pointer[pthread_cond_t]) : CInt;

external (cdecl) pthread_cond_broadcast(arg0:Pointer[pthread_cond_t]) : CInt;

external (cdecl) pthread_cond_wait(arg0:Pointer[pthread_cond_t], arg1:Pointer[pthread_mutex_t]) : CInt;

external (cdecl) pthread_cond_timedwait(arg0:Pointer[pthread_cond_t], arg1:Pointer[pthread_mutex_t], arg2:Pointer[Struct_timespec]) : CInt;

external (cdecl) pthread_condattr_init(arg0:Pointer[pthread_condattr_t]) : CInt;

external (cdecl) pthread_condattr_destroy(arg0:Pointer[pthread_condattr_t]) : CInt;

external (cdecl) pthread_condattr_getpshared(arg0:Pointer[pthread_condattr_t], arg1:Pointer[CInt]) : CInt;

external (cdecl) pthread_condattr_setpshared(arg0:Pointer[pthread_condattr_t], arg1:CInt) : CInt;

external (cdecl) pthread_condattr_getclock(arg0:Pointer[pthread_condattr_t], arg1:Pointer[__clockid_t]) : CInt;

external (cdecl) pthread_condattr_setclock(arg0:Pointer[pthread_condattr_t], arg1:__clockid_t) : CInt;

external (cdecl) pthread_spin_init(arg0:Pointer[pthread_spinlock_t], arg1:CInt) : CInt;

external (cdecl) pthread_spin_destroy(arg0:Pointer[pthread_spinlock_t]) : CInt;

external (cdecl) pthread_spin_lock(arg0:Pointer[pthread_spinlock_t]) : CInt;

external (cdecl) pthread_spin_trylock(arg0:Pointer[pthread_spinlock_t]) : CInt;

external (cdecl) pthread_spin_unlock(arg0:Pointer[pthread_spinlock_t]) : CInt;

external (cdecl) pthread_barrier_init(arg0:Pointer[pthread_barrier_t], arg1:Pointer[pthread_barrierattr_t], arg2:CUInt) : CInt;

external (cdecl) pthread_barrier_destroy(arg0:Pointer[pthread_barrier_t]) : CInt;

external (cdecl) pthread_barrier_wait(arg0:Pointer[pthread_barrier_t]) : CInt;

external (cdecl) pthread_barrierattr_init(arg0:Pointer[pthread_barrierattr_t]) : CInt;

external (cdecl) pthread_barrierattr_destroy(arg0:Pointer[pthread_barrierattr_t]) : CInt;

external (cdecl) pthread_barrierattr_getpshared(arg0:Pointer[pthread_barrierattr_t], arg1:Pointer[CInt]) : CInt;

external (cdecl) pthread_barrierattr_setpshared(arg0:Pointer[pthread_barrierattr_t], arg1:CInt) : CInt;

external (cdecl) pthread_key_create(arg0:Pointer[pthread_key_t], arg1:CCodePointer[[OpaquePointer],[]]) : CInt;

external (cdecl) pthread_key_delete(arg0:pthread_key_t) : CInt;

external (cdecl) pthread_getspecific(arg0:pthread_key_t) : OpaquePointer;

external (cdecl) pthread_setspecific(arg0:pthread_key_t, arg1:OpaquePointer) : CInt;

external (cdecl) pthread_getcpuclockid(arg0:pthread_t, arg1:Pointer[__clockid_t]) : CInt;

external (cdecl) pthread_atfork(arg0:CCodePointer[[],[]], arg1:CCodePointer[[],[]], arg2:CCodePointer[[],[]]) : CInt;

alias u_char = __u_char;

alias u_short = __u_short;

alias u_int = __u_int;

alias u_long = __u_long;

alias quad_t = __quad_t;

alias u_quad_t = __u_quad_t;

alias fsid_t = __fsid_t;

alias loff_t = __loff_t;

alias ino_t = __ino_t;

alias dev_t = __dev_t;

alias mode_t = __mode_t;

alias nlink_t = __nlink_t;

alias id_t = __id_t;

alias daddr_t = __daddr_t;

alias caddr_t = __caddr_t;

alias key_t = __key_t;

alias ulong = CULong;

alias ushort = CUShort;

alias uint = CUInt;

alias int8_t = CChar;

alias int16_t = CShort;

alias int32_t = CInt;

alias int64_t = CLong;

alias u_int8_t = CUChar;

alias u_int16_t = CUShort;

alias u_int32_t = CUInt;

alias u_int64_t = CULong;

alias register_t = CLong;

alias __sig_atomic_t = CInt;

record __sigset_t (
    __val : Array[CULong, 16],
);

alias sigset_t = __sigset_t;

record Struct_timeval (
    tv_sec : __time_t,
    tv_usec : __suseconds_t,
);

alias suseconds_t = __suseconds_t;

alias __fd_mask = CLong;

record fd_set (
    __fds_bits : Array[__fd_mask, 16],
);

alias fd_mask = __fd_mask;

external (cdecl) select(arg0:CInt, arg1:Pointer[fd_set], arg2:Pointer[fd_set], arg3:Pointer[fd_set], arg4:Pointer[Struct_timeval]) : CInt;

external (cdecl) pselect(arg0:CInt, arg1:Pointer[fd_set], arg2:Pointer[fd_set], arg3:Pointer[fd_set], arg4:Pointer[Struct_timespec], arg5:Pointer[__sigset_t]) : CInt;

external (cdecl) gnu_dev_major(arg0:CULongLong) : CUInt;

external (cdecl) gnu_dev_minor(arg0:CULongLong) : CUInt;

external (cdecl) gnu_dev_makedev(arg0:CUInt, arg1:CUInt) : CULongLong;

alias blksize_t = __blksize_t;

alias blkcnt_t = __blkcnt_t;

alias fsblkcnt_t = __fsblkcnt_t;

alias fsfilcnt_t = __fsfilcnt_t;

record Struct_flock (
    l_type : CShort,
    l_whence : CShort,
    l_start : __off_t,
    l_len : __off_t,
    l_pid : __pid_t,
);

record Struct_stat (
    st_dev : __dev_t,
    st_ino : __ino_t,
    st_nlink : __nlink_t,
    st_mode : __mode_t,
    st_uid : __uid_t,
    st_gid : __gid_t,
    __pad0 : CInt,
    st_rdev : __dev_t,
    st_size : __off_t,
    st_blksize : __blksize_t,
    st_blocks : __blkcnt_t,
    st_atim : Struct_timespec,
    st_mtim : Struct_timespec,
    st_ctim : Struct_timespec,
    __unused : Array[__syscall_slong_t, 3],
);

external (cdecl) fcntl(arg0:CInt, arg1:CInt, ..) : CInt;

external (cdecl) open(arg0:Pointer[CChar], arg1:CInt, ..) : CInt;

external (cdecl) openat(arg0:CInt, arg1:Pointer[CChar], arg2:CInt, ..) : CInt;

external (cdecl) creat(arg0:Pointer[CChar], arg1:__mode_t) : CInt;

external (cdecl) posix_fadvise(arg0:CInt, arg1:__off_t, arg2:__off_t, arg3:CInt) : CInt;

external (cdecl) posix_fallocate(arg0:CInt, arg1:__off_t, arg2:__off_t) : CInt;

record Struct_timezone (
    tz_minuteswest : CInt,
    tz_dsttime : CInt,
);

alias __timezone_ptr_t = Pointer[Struct_timezone];

external (cdecl) gettimeofday(arg0:Pointer[Struct_timeval], arg1:__timezone_ptr_t) : CInt;

external (cdecl) settimeofday(arg0:Pointer[Struct_timeval], arg1:Pointer[Struct_timezone]) : CInt;

external (cdecl) adjtime(arg0:Pointer[Struct_timeval], arg1:Pointer[Struct_timeval]) : CInt;

alias Enum___itimer_which = CUInt;
alias ITIMER_REAL = CUInt(0);
alias ITIMER_VIRTUAL = CUInt(1);
alias ITIMER_PROF = CUInt(2);

record Struct_itimerval (
    it_interval : Struct_timeval,
    it_value : Struct_timeval,
);

alias __itimer_which_t = CInt;

external (cdecl) getitimer(arg0:__itimer_which_t, arg1:Pointer[Struct_itimerval]) : CInt;

external (cdecl) setitimer(arg0:__itimer_which_t, arg1:Pointer[Struct_itimerval], arg2:Pointer[Struct_itimerval]) : CInt;

external (cdecl) utimes(arg0:Pointer[CChar], arg1:Pointer[Struct_timeval]) : CInt;

external (cdecl) lutimes(arg0:Pointer[CChar], arg1:Pointer[Struct_timeval]) : CInt;

external (cdecl) futimes(arg0:CInt, arg1:Pointer[Struct_timeval]) : CInt;

external (cdecl) stat(arg0:Pointer[CChar], arg1:Pointer[Struct_stat]) : CInt;

external (cdecl) fstat(arg0:CInt, arg1:Pointer[Struct_stat]) : CInt;

external (cdecl) fstatat(arg0:CInt, arg1:Pointer[CChar], arg2:Pointer[Struct_stat], arg3:CInt) : CInt;

external (cdecl) lstat(arg0:Pointer[CChar], arg1:Pointer[Struct_stat]) : CInt;

external (cdecl) chmod(arg0:Pointer[CChar], arg1:__mode_t) : CInt;

external (cdecl) lchmod(arg0:Pointer[CChar], arg1:__mode_t) : CInt;

external (cdecl) fchmod(arg0:CInt, arg1:__mode_t) : CInt;

external (cdecl) fchmodat(arg0:CInt, arg1:Pointer[CChar], arg2:__mode_t, arg3:CInt) : CInt;

external (cdecl) umask(arg0:__mode_t) : __mode_t;

external (cdecl) mkdir(arg0:Pointer[CChar], arg1:__mode_t) : CInt;

external (cdecl) mkdirat(arg0:CInt, arg1:Pointer[CChar], arg2:__mode_t) : CInt;

external (cdecl) mknod(arg0:Pointer[CChar], arg1:__mode_t, arg2:__dev_t) : CInt;

external (cdecl) mknodat(arg0:CInt, arg1:Pointer[CChar], arg2:__mode_t, arg3:__dev_t) : CInt;

external (cdecl) mkfifo(arg0:Pointer[CChar], arg1:__mode_t) : CInt;

external (cdecl) mkfifoat(arg0:CInt, arg1:Pointer[CChar], arg2:__mode_t) : CInt;

external (cdecl) utimensat(arg0:CInt, arg1:Pointer[CChar], arg2:Pointer[Struct_timespec], arg3:CInt) : CInt;

external (cdecl) futimens(arg0:CInt, arg1:Pointer[Struct_timespec]) : CInt;

external (cdecl) __fxstat(arg0:CInt, arg1:CInt, arg2:Pointer[Struct_stat]) : CInt;

external (cdecl) __xstat(arg0:CInt, arg1:Pointer[CChar], arg2:Pointer[Struct_stat]) : CInt;

external (cdecl) __lxstat(arg0:CInt, arg1:Pointer[CChar], arg2:Pointer[Struct_stat]) : CInt;

external (cdecl) __fxstatat(arg0:CInt, arg1:CInt, arg2:Pointer[CChar], arg3:Pointer[Struct_stat], arg4:CInt) : CInt;

external (cdecl) __xmknod(arg0:CInt, arg1:Pointer[CChar], arg2:__mode_t, arg3:Pointer[__dev_t]) : CInt;

external (cdecl) __xmknodat(arg0:CInt, arg1:CInt, arg2:Pointer[CChar], arg3:__mode_t, arg4:Pointer[__dev_t]) : CInt;

external (cdecl) mmap(arg0:OpaquePointer, arg1:size_t, arg2:CInt, arg3:CInt, arg4:CInt, arg5:__off_t) : OpaquePointer;

external (cdecl) munmap(arg0:OpaquePointer, arg1:size_t) : CInt;

external (cdecl) mprotect(arg0:OpaquePointer, arg1:size_t, arg2:CInt) : CInt;

external (cdecl) msync(arg0:OpaquePointer, arg1:size_t, arg2:CInt) : CInt;

external (cdecl) madvise(arg0:OpaquePointer, arg1:size_t, arg2:CInt) : CInt;

external (cdecl) posix_madvise(arg0:OpaquePointer, arg1:size_t, arg2:CInt) : CInt;

external (cdecl) mlock(arg0:OpaquePointer, arg1:size_t) : CInt;

external (cdecl) munlock(arg0:OpaquePointer, arg1:size_t) : CInt;

external (cdecl) mlockall(arg0:CInt) : CInt;

external (cdecl) munlockall() : CInt;

external (cdecl) mincore(arg0:OpaquePointer, arg1:size_t, arg2:Pointer[CUChar]) : CInt;

external (cdecl) shm_open(arg0:Pointer[CChar], arg1:CInt, arg2:mode_t) : CInt;

external (cdecl) shm_unlink(arg0:Pointer[CChar]) : CInt;

record Struct_iovec (
    iov_base : OpaquePointer,
    iov_len : size_t,
);

external (cdecl) readv(arg0:CInt, arg1:Pointer[Struct_iovec], arg2:CInt) : ssize_t;

external (cdecl) writev(arg0:CInt, arg1:Pointer[Struct_iovec], arg2:CInt) : ssize_t;

external (cdecl) preadv(arg0:CInt, arg1:Pointer[Struct_iovec], arg2:CInt, arg3:__off_t) : ssize_t;

external (cdecl) pwritev(arg0:CInt, arg1:Pointer[Struct_iovec], arg2:CInt, arg3:__off_t) : ssize_t;

alias Enum___socket_type = CUInt;
alias SOCK_STREAM = CUInt(1);
alias SOCK_DGRAM = CUInt(2);
alias SOCK_RAW = CUInt(3);
alias SOCK_RDM = CUInt(4);
alias SOCK_SEQPACKET = CUInt(5);
alias SOCK_DCCP = CUInt(6);
alias SOCK_PACKET = CUInt(10);
alias SOCK_CLOEXEC = CUInt(524288);
alias SOCK_NONBLOCK = CUInt(2048);

alias sa_family_t = CUShort;

record Struct_sockaddr (
    sa_family : sa_family_t,
    sa_data : Array[CChar, 14],
);

record Struct_sockaddr_storage (
    ss_family : sa_family_t,
    __ss_align : CULong,
    __ss_padding : Array[CChar, 112],
);


record Struct_msghdr (
    msg_name : OpaquePointer,
    msg_namelen : socklen_t,
    msg_iov : Pointer[Struct_iovec],
    msg_iovlen : size_t,
    msg_control : OpaquePointer,
    msg_controllen : size_t,
    msg_flags : CInt,
);

record Struct_cmsghdr (
    cmsg_len : size_t,
    cmsg_level : CInt,
    cmsg_type : CInt,
    __cmsg_data : Opaque ,
);

external (cdecl) __cmsg_nxthdr(arg0:Pointer[Struct_msghdr], arg1:Pointer[Struct_cmsghdr]) : Pointer[Struct_cmsghdr];


record Struct_linger (
    l_onoff : CInt,
    l_linger : CInt,
);

record Struct_osockaddr (
    sa_family : CUShort,
    sa_data : Array[CUChar, 14],
);


external (cdecl) socket(arg0:CInt, arg1:CInt, arg2:CInt) : CInt;

external (cdecl) socketpair(arg0:CInt, arg1:CInt, arg2:CInt, arg3:Pointer[CInt]) : CInt;

external (cdecl) bind(arg0:CInt, arg1:Pointer[Struct_sockaddr], arg2:socklen_t) : CInt;

external (cdecl) getsockname(arg0:CInt, arg1:Pointer[Struct_sockaddr], arg2:Pointer[socklen_t]) : CInt;

external (cdecl) connect(arg0:CInt, arg1:Pointer[Struct_sockaddr], arg2:socklen_t) : CInt;

external (cdecl) getpeername(arg0:CInt, arg1:Pointer[Struct_sockaddr], arg2:Pointer[socklen_t]) : CInt;

external (cdecl) send(arg0:CInt, arg1:OpaquePointer, arg2:size_t, arg3:CInt) : ssize_t;

external (cdecl) recv(arg0:CInt, arg1:OpaquePointer, arg2:size_t, arg3:CInt) : ssize_t;

external (cdecl) sendto(arg0:CInt, arg1:OpaquePointer, arg2:size_t, arg3:CInt, arg4:Pointer[Struct_sockaddr], arg5:socklen_t) : ssize_t;

external (cdecl) recvfrom(arg0:CInt, arg1:OpaquePointer, arg2:size_t, arg3:CInt, arg4:Pointer[Struct_sockaddr], arg5:Pointer[socklen_t]) : ssize_t;

external (cdecl) sendmsg(arg0:CInt, arg1:Pointer[Struct_msghdr], arg2:CInt) : ssize_t;

external (cdecl) recvmsg(arg0:CInt, arg1:Pointer[Struct_msghdr], arg2:CInt) : ssize_t;

external (cdecl) getsockopt(arg0:CInt, arg1:CInt, arg2:CInt, arg3:OpaquePointer, arg4:Pointer[socklen_t]) : CInt;

external (cdecl) setsockopt(arg0:CInt, arg1:CInt, arg2:CInt, arg3:OpaquePointer, arg4:socklen_t) : CInt;

external (cdecl) listen(arg0:CInt, arg1:CInt) : CInt;

external (cdecl) accept(arg0:CInt, arg1:Pointer[Struct_sockaddr], arg2:Pointer[socklen_t]) : CInt;

external (cdecl) shutdown(arg0:CInt, arg1:CInt) : CInt;

external (cdecl) sockatmark(arg0:CInt) : CInt;

external (cdecl) isfdtype(arg0:CInt, arg1:CInt) : CInt;

external (cdecl) __sigismember(arg0:Pointer[__sigset_t], arg1:CInt) : CInt;

external (cdecl) __sigaddset(arg0:Pointer[__sigset_t], arg1:CInt) : CInt;

external (cdecl) __sigdelset(arg0:Pointer[__sigset_t], arg1:CInt) : CInt;

alias sig_atomic_t = __sig_atomic_t;

alias Union_sigval = Union[
     CInt,
     OpaquePointer,
];

alias sigval_t = Union_sigval;

alias __sigchld_clock_t = __clock_t;

record siginfo_t (
    si_signo : CInt,
    si_errno : CInt,
    si_code : CInt,
    _sifields : Union_Unnamed4,
);









record Struct_sigevent (
    sigev_value : sigval_t,
    sigev_signo : CInt,
    sigev_notify : CInt,
    _sigev_un : Union_Unnamed5,
);

alias sigevent_t = Struct_sigevent;


alias __sighandler_t = CCodePointer[[CInt],[]];

external (cdecl) __sysv_signal(arg0:CInt, arg1:__sighandler_t) : __sighandler_t;

external (cdecl) signal(arg0:CInt, arg1:__sighandler_t) : __sighandler_t;

external (cdecl) kill(arg0:__pid_t, arg1:CInt) : CInt;

external (cdecl) killpg(arg0:__pid_t, arg1:CInt) : CInt;

external (cdecl) raise(arg0:CInt) : CInt;

external (cdecl) ssignal(arg0:CInt, arg1:__sighandler_t) : __sighandler_t;

external (cdecl) gsignal(arg0:CInt) : CInt;

external (cdecl) psignal(arg0:CInt, arg1:Pointer[CChar]) : ;

external (cdecl) psiginfo(arg0:Pointer[siginfo_t], arg1:Pointer[CChar]) : ;

external (cdecl) __sigpause(arg0:CInt, arg1:CInt) : CInt;

external (cdecl) sigblock(arg0:CInt) : CInt;

external (cdecl) sigsetmask(arg0:CInt) : CInt;

external (cdecl) siggetmask() : CInt;

alias sig_t = __sighandler_t;

external (cdecl) sigemptyset(arg0:Pointer[sigset_t]) : CInt;

external (cdecl) sigfillset(arg0:Pointer[sigset_t]) : CInt;

external (cdecl) sigaddset(arg0:Pointer[sigset_t], arg1:CInt) : CInt;

external (cdecl) sigdelset(arg0:Pointer[sigset_t], arg1:CInt) : CInt;

external (cdecl) sigismember(arg0:Pointer[sigset_t], arg1:CInt) : CInt;

record Struct_sigaction (
    __sigaction_handler : Union_Unnamed6,
    sa_mask : __sigset_t,
    sa_flags : CInt,
    sa_restorer : CCodePointer[[],[]],
);

external (cdecl) sigprocmask(arg0:CInt, arg1:Pointer[sigset_t], arg2:Pointer[sigset_t]) : CInt;

external (cdecl) sigsuspend(arg0:Pointer[sigset_t]) : CInt;

external (cdecl) sigaction(arg0:CInt, arg1:Pointer[Struct_sigaction], arg2:Pointer[Struct_sigaction]) : CInt;

external (cdecl) sigpending(arg0:Pointer[sigset_t]) : CInt;

external (cdecl) sigwait(arg0:Pointer[sigset_t], arg1:Pointer[CInt]) : CInt;

external (cdecl) sigwaitinfo(arg0:Pointer[sigset_t], arg1:Pointer[siginfo_t]) : CInt;

external (cdecl) sigtimedwait(arg0:Pointer[sigset_t], arg1:Pointer[siginfo_t], arg2:Pointer[Struct_timespec]) : CInt;

external (cdecl) sigqueue(arg0:__pid_t, arg1:CInt, arg2:Union_sigval) : CInt;

external _sys_siglist : Array[Pointer[CChar], 65];

external sys_siglist : Array[Pointer[CChar], 65];

record Struct_sigvec (
    sv_handler : __sighandler_t,
    sv_mask : CInt,
    sv_flags : CInt,
);

external (cdecl) sigvec(arg0:CInt, arg1:Pointer[Struct_sigvec], arg2:Pointer[Struct_sigvec]) : CInt;

record Struct__fpx_sw_bytes (
    magic1 : __uint32_t,
    extended_size : __uint32_t,
    xstate_bv : __uint64_t,
    xstate_size : __uint32_t,
    padding : Array[__uint32_t, 7],
);

record Struct__fpreg (
    significand : Array[CUShort, 4],
    exponent : CUShort,
);

record Struct__fpxreg (
    significand : Array[CUShort, 4],
    exponent : CUShort,
    padding : Array[CUShort, 3],
);

record Struct__xmmreg (
    element : Array[__uint32_t, 4],
);

record Struct__fpstate (
    cwd : __uint16_t,
    swd : __uint16_t,
    ftw : __uint16_t,
    fop : __uint16_t,
    rip : __uint64_t,
    rdp : __uint64_t,
    mxcsr : __uint32_t,
    mxcr_mask : __uint32_t,
    _st : Array[Struct__fpxreg, 8],
    _xmm : Array[Struct__xmmreg, 16],
    padding : Array[__uint32_t, 24],
);

record Struct_sigcontext (
    r8 : __uint64_t,
    r9 : __uint64_t,
    r10 : __uint64_t,
    r11 : __uint64_t,
    r12 : __uint64_t,
    r13 : __uint64_t,
    r14 : __uint64_t,
    r15 : __uint64_t,
    rdi : __uint64_t,
    rsi : __uint64_t,
    rbp : __uint64_t,
    rbx : __uint64_t,
    rdx : __uint64_t,
    rax : __uint64_t,
    rcx : __uint64_t,
    rsp : __uint64_t,
    rip : __uint64_t,
    eflags : __uint64_t,
    cs : CUShort,
    gs : CUShort,
    fs : CUShort,
    __pad0 : CUShort,
    err : __uint64_t,
    trapno : __uint64_t,
    oldmask : __uint64_t,
    cr2 : __uint64_t,
    __reserved1 : Array[__uint64_t, 8],
);

record Struct__xsave_hdr (
    xstate_bv : __uint64_t,
    reserved1 : Array[__uint64_t, 2],
    reserved2 : Array[__uint64_t, 5],
);

record Struct__ymmh_state (
    ymmh_space : Array[__uint32_t, 64],
);

record Struct__xstate (
    fpstate : Struct__fpstate,
    xstate_hdr : Struct__xsave_hdr,
    ymmh : Struct__ymmh_state,
);

external (cdecl) sigreturn(arg0:Pointer[Struct_sigcontext]) : CInt;

external (cdecl) siginterrupt(arg0:CInt, arg1:CInt) : CInt;

record Struct_sigstack (
    ss_sp : OpaquePointer,
    ss_onstack : CInt,
);


record Struct_sigaltstack (
    ss_sp : OpaquePointer,
    ss_flags : CInt,
    ss_size : size_t,
);

alias stack_t = Struct_sigaltstack;

alias greg_t = CLongLong;

alias gregset_t = Array[greg_t, 23];

record Struct__libc_fpxreg (
    significand : Array[CUShort, 4],
    exponent : CUShort,
    padding : Array[CUShort, 3],
);

record Struct__libc_xmmreg (
    element : Array[__uint32_t, 4],
);

record Struct__libc_fpstate (
    cwd : __uint16_t,
    swd : __uint16_t,
    ftw : __uint16_t,
    fop : __uint16_t,
    rip : __uint64_t,
    rdp : __uint64_t,
    mxcsr : __uint32_t,
    mxcr_mask : __uint32_t,
    _st : Array[Struct__libc_fpxreg, 8],
    _xmm : Array[Struct__libc_xmmreg, 16],
    padding : Array[__uint32_t, 24],
);

alias fpregset_t = Pointer[Struct__libc_fpstate];

record mcontext_t (
    gregs : gregset_t,
    fpregs : fpregset_t,
    __reserved1 : Array[CULongLong, 8],
);

record Struct_ucontext (
    uc_flags : CULong,
    uc_link : Pointer[Struct_ucontext],
    uc_stack : stack_t,
    uc_mcontext : mcontext_t,
    uc_sigmask : __sigset_t,
    __fpregs_mem : Struct__libc_fpstate,
);

alias ucontext_t = Struct_ucontext;

external (cdecl) sigstack(arg0:Pointer[Struct_sigstack], arg1:Pointer[Struct_sigstack]) : CInt;

external (cdecl) sigaltstack(arg0:Pointer[Struct_sigaltstack], arg1:Pointer[Struct_sigaltstack]) : CInt;

external (cdecl) pthread_sigmask(arg0:CInt, arg1:Pointer[__sigset_t], arg2:Pointer[__sigset_t]) : CInt;

external (cdecl) pthread_kill(arg0:pthread_t, arg1:CInt) : CInt;

external (cdecl) __libc_current_sigrtmin() : CInt;

external (cdecl) __libc_current_sigrtmax() : CInt;

alias __WAIT_STATUS = Union[
     Pointer[Union_wait],
     Pointer[CInt],
];

alias Union_wait = Union[
     CInt,
     Struct_Unnamed7,
     Struct_Unnamed8,
];


alias idtype_t = CUInt;
alias P_ALL = CUInt(0);
alias P_PID = CUInt(1);
alias P_PGID = CUInt(2);

external (cdecl) wait(arg0:__WAIT_STATUS) : __pid_t;

external (cdecl) waitpid(arg0:__pid_t, arg1:Pointer[CInt], arg2:CInt) : __pid_t;

external (cdecl) waitid(arg0:idtype_t, arg1:__id_t, arg2:Pointer[siginfo_t], arg3:CInt) : CInt;

alias Struct_rusage = Opaque;

external (cdecl) wait3(arg0:__WAIT_STATUS, arg1:CInt, arg2:Pointer[Struct_rusage]) : __pid_t;

external (cdecl) wait4(arg0:__pid_t, arg1:__WAIT_STATUS, arg2:CInt, arg3:Pointer[Struct_rusage]) : __pid_t;

alias uint8_t = CUChar;

alias uint16_t = CUShort;

alias uint32_t = CUInt;

alias uint64_t = CULong;

alias int_least8_t = CChar;

alias int_least16_t = CShort;

alias int_least32_t = CInt;

alias int_least64_t = CLong;

alias uint_least8_t = CUChar;

alias uint_least16_t = CUShort;

alias uint_least32_t = CUInt;

alias uint_least64_t = CULong;

alias int_fast8_t = CChar;

alias int_fast16_t = CLong;

alias int_fast32_t = CLong;

alias int_fast64_t = CLong;

alias uint_fast8_t = CUChar;

alias uint_fast16_t = CULong;

alias uint_fast32_t = CULong;

alias uint_fast64_t = CULong;

alias uintptr_t = CULong;

alias intmax_t = CLong;

alias uintmax_t = CULong;


alias Enum_EPOLL_EVENTS = CUInt;
alias EPOLLIN = CUInt(1);
alias EPOLLPRI = CUInt(2);
alias EPOLLOUT = CUInt(4);
alias EPOLLRDNORM = CUInt(64);
alias EPOLLRDBAND = CUInt(128);
alias EPOLLWRNORM = CUInt(256);
alias EPOLLWRBAND = CUInt(512);
alias EPOLLMSG = CUInt(1024);
alias EPOLLERR = CUInt(8);
alias EPOLLHUP = CUInt(16);
alias EPOLLRDHUP = CUInt(8192);
alias EPOLLONESHOT = CUInt(1073741824);
alias EPOLLET = CUInt(-2147483648);

alias Union_epoll_data = Union[
     OpaquePointer,
     CInt,
     uint32_t,
     uint64_t,
];

alias epoll_data_t = Union_epoll_data;

record Struct_epoll_event (
    events : uint32_t,
    data : epoll_data_t,
);

external (cdecl) epoll_create(arg0:CInt) : CInt;

external (cdecl) epoll_create1(arg0:CInt) : CInt;

external (cdecl) epoll_ctl(arg0:CInt, arg1:CInt, arg2:CInt, arg3:Pointer[Struct_epoll_event]) : CInt;

external (cdecl) epoll_wait(arg0:CInt, arg1:Pointer[Struct_epoll_event], arg2:CInt, arg3:CInt) : CInt;

external (cdecl) epoll_pwait(arg0:CInt, arg1:Pointer[Struct_epoll_event], arg2:CInt, arg3:CInt, arg4:Pointer[__sigset_t]) : CInt;

record Struct_dirent (
    d_ino : __ino_t,
    d_off : __off_t,
    d_reclen : CUShort,
    d_type : CUChar,
    d_name : Array[CChar, 256],
);


alias Struct___dirstream = Opaque;

alias DIR = Struct___dirstream;

external (cdecl) opendir(arg0:Pointer[CChar]) : Pointer[DIR];

external (cdecl) fdopendir(arg0:CInt) : Pointer[DIR];

external (cdecl) closedir(arg0:Pointer[DIR]) : CInt;

external (cdecl) readdir(arg0:Pointer[DIR]) : Pointer[Struct_dirent];

external (cdecl) readdir_r(arg0:Pointer[DIR], arg1:Pointer[Struct_dirent], arg2:Pointer[Pointer[Struct_dirent]]) : CInt;

external (cdecl) rewinddir(arg0:Pointer[DIR]) : ;

external (cdecl) seekdir(arg0:Pointer[DIR], arg1:CLong) : ;

external (cdecl) telldir(arg0:Pointer[DIR]) : CLong;

external (cdecl) dirfd(arg0:Pointer[DIR]) : CInt;

external (cdecl) scandir(arg0:Pointer[CChar], arg1:Pointer[Pointer[Pointer[Struct_dirent]]], arg2:CCodePointer[[Pointer[Struct_dirent]],[CInt]], arg3:CCodePointer[[Pointer[Pointer[Struct_dirent]], Pointer[Pointer[Struct_dirent]]],[CInt]]) : CInt;

external (cdecl) alphasort(arg0:Pointer[Pointer[Struct_dirent]], arg1:Pointer[Pointer[Struct_dirent]]) : CInt;

external (cdecl) getdirentries(arg0:CInt, arg1:Pointer[CChar], arg2:size_t, arg3:Pointer[__off_t]) : __ssize_t;

record div_t (
    quot : CInt,
    rem : CInt,
);

record ldiv_t (
    quot : CLong,
    rem : CLong,
);

record lldiv_t (
    quot : CLongLong,
    rem : CLongLong,
);

external (cdecl) __ctype_get_mb_cur_max() : size_t;

external (cdecl) atof(arg0:Pointer[CChar]) : CDouble;

external (cdecl) atoi(arg0:Pointer[CChar]) : CInt;

external (cdecl) atol(arg0:Pointer[CChar]) : CLong;

external (cdecl) atoll(arg0:Pointer[CChar]) : CLongLong;

external (cdecl) strtod(arg0:Pointer[CChar], arg1:Pointer[Pointer[CChar]]) : CDouble;

external (cdecl) strtof(arg0:Pointer[CChar], arg1:Pointer[Pointer[CChar]]) : CFloat;

external (cdecl) strtold(arg0:Pointer[CChar], arg1:Pointer[Pointer[CChar]]) : CLongDouble;

external (cdecl) strtol(arg0:Pointer[CChar], arg1:Pointer[Pointer[CChar]], arg2:CInt) : CLong;

external (cdecl) strtoul(arg0:Pointer[CChar], arg1:Pointer[Pointer[CChar]], arg2:CInt) : CULong;

external (cdecl) strtoq(arg0:Pointer[CChar], arg1:Pointer[Pointer[CChar]], arg2:CInt) : CLongLong;

external (cdecl) strtouq(arg0:Pointer[CChar], arg1:Pointer[Pointer[CChar]], arg2:CInt) : CULongLong;

external (cdecl) strtoll(arg0:Pointer[CChar], arg1:Pointer[Pointer[CChar]], arg2:CInt) : CLongLong;

external (cdecl) strtoull(arg0:Pointer[CChar], arg1:Pointer[Pointer[CChar]], arg2:CInt) : CULongLong;

external (cdecl) l64a(arg0:CLong) : Pointer[CChar];

external (cdecl) a64l(arg0:Pointer[CChar]) : CLong;

external (cdecl) random() : CLong;

external (cdecl) srandom(arg0:CUInt) : ;

external (cdecl) initstate(arg0:CUInt, arg1:Pointer[CChar], arg2:size_t) : Pointer[CChar];

external (cdecl) setstate(arg0:Pointer[CChar]) : Pointer[CChar];

record Struct_random_data (
    fptr : Pointer[int32_t],
    rptr : Pointer[int32_t],
    state : Pointer[int32_t],
    rand_type : CInt,
    rand_deg : CInt,
    rand_sep : CInt,
    end_ptr : Pointer[int32_t],
);

external (cdecl) random_r(arg0:Pointer[Struct_random_data], arg1:Pointer[int32_t]) : CInt;

external (cdecl) srandom_r(arg0:CUInt, arg1:Pointer[Struct_random_data]) : CInt;

external (cdecl) initstate_r(arg0:CUInt, arg1:Pointer[CChar], arg2:size_t, arg3:Pointer[Struct_random_data]) : CInt;

external (cdecl) setstate_r(arg0:Pointer[CChar], arg1:Pointer[Struct_random_data]) : CInt;

external (cdecl) rand() : CInt;

external (cdecl) srand(arg0:CUInt) : ;

external (cdecl) rand_r(arg0:Pointer[CUInt]) : CInt;

external (cdecl) drand48() : CDouble;

external (cdecl) erand48(arg0:Pointer[CUShort]) : CDouble;

external (cdecl) lrand48() : CLong;

external (cdecl) nrand48(arg0:Pointer[CUShort]) : CLong;

external (cdecl) mrand48() : CLong;

external (cdecl) jrand48(arg0:Pointer[CUShort]) : CLong;

external (cdecl) srand48(arg0:CLong) : ;

external (cdecl) seed48(arg0:Pointer[CUShort]) : Pointer[CUShort];

external (cdecl) lcong48(arg0:Pointer[CUShort]) : ;

record Struct_drand48_data (
    __x : Array[CUShort, 3],
    __old_x : Array[CUShort, 3],
    __c : CUShort,
    __init : CUShort,
    __a : CULongLong,
);

external (cdecl) drand48_r(arg0:Pointer[Struct_drand48_data], arg1:Pointer[CDouble]) : CInt;

external (cdecl) erand48_r(arg0:Pointer[CUShort], arg1:Pointer[Struct_drand48_data], arg2:Pointer[CDouble]) : CInt;

external (cdecl) lrand48_r(arg0:Pointer[Struct_drand48_data], arg1:Pointer[CLong]) : CInt;

external (cdecl) nrand48_r(arg0:Pointer[CUShort], arg1:Pointer[Struct_drand48_data], arg2:Pointer[CLong]) : CInt;

external (cdecl) mrand48_r(arg0:Pointer[Struct_drand48_data], arg1:Pointer[CLong]) : CInt;

external (cdecl) jrand48_r(arg0:Pointer[CUShort], arg1:Pointer[Struct_drand48_data], arg2:Pointer[CLong]) : CInt;

external (cdecl) srand48_r(arg0:CLong, arg1:Pointer[Struct_drand48_data]) : CInt;

external (cdecl) seed48_r(arg0:Pointer[CUShort], arg1:Pointer[Struct_drand48_data]) : CInt;

external (cdecl) lcong48_r(arg0:Pointer[CUShort], arg1:Pointer[Struct_drand48_data]) : CInt;

external (cdecl) malloc(arg0:size_t) : OpaquePointer;

external (cdecl) calloc(arg0:size_t, arg1:size_t) : OpaquePointer;

external (cdecl) realloc(arg0:OpaquePointer, arg1:size_t) : OpaquePointer;

external (cdecl) free(arg0:OpaquePointer) : ;

external (cdecl) cfree(arg0:OpaquePointer) : ;

external (cdecl) alloca(arg0:size_t) : OpaquePointer;

external (cdecl) valloc(arg0:size_t) : OpaquePointer;

external (cdecl) posix_memalign(arg0:Pointer[OpaquePointer], arg1:size_t, arg2:size_t) : CInt;

external (cdecl) abort() : ;

external (cdecl) atexit(arg0:CCodePointer[[],[]]) : CInt;

external (cdecl) on_exit(arg0:CCodePointer[[CInt, OpaquePointer],[]], arg1:OpaquePointer) : CInt;

external (cdecl) exit(arg0:CInt) : ;

external (cdecl) _Exit(arg0:CInt) : ;

external (cdecl) getenv(arg0:Pointer[CChar]) : Pointer[CChar];

external (cdecl) __secure_getenv(arg0:Pointer[CChar]) : Pointer[CChar];

external (cdecl) putenv(arg0:Pointer[CChar]) : CInt;

external (cdecl) setenv(arg0:Pointer[CChar], arg1:Pointer[CChar], arg2:CInt) : CInt;

external (cdecl) unsetenv(arg0:Pointer[CChar]) : CInt;

external (cdecl) clearenv() : CInt;

external (cdecl) mktemp(arg0:Pointer[CChar]) : Pointer[CChar];

external (cdecl) mkstemp(arg0:Pointer[CChar]) : CInt;

external (cdecl) mkstemps(arg0:Pointer[CChar], arg1:CInt) : CInt;

external (cdecl) mkdtemp(arg0:Pointer[CChar]) : Pointer[CChar];

external (cdecl) system(arg0:Pointer[CChar]) : CInt;

external (cdecl) realpath(arg0:Pointer[CChar], arg1:Pointer[CChar]) : Pointer[CChar];

alias __compar_fn_t = CCodePointer[[OpaquePointer, OpaquePointer],[CInt]];

external (cdecl) bsearch(arg0:OpaquePointer, arg1:OpaquePointer, arg2:size_t, arg3:size_t, arg4:__compar_fn_t) : OpaquePointer;

external (cdecl) qsort(arg0:OpaquePointer, arg1:size_t, arg2:size_t, arg3:__compar_fn_t) : ;

external (cdecl) abs(arg0:CInt) : CInt;

external (cdecl) labs(arg0:CLong) : CLong;

external (cdecl) llabs(arg0:CLongLong) : CLongLong;

external (cdecl) div(arg0:CInt, arg1:CInt) : div_t;

external (cdecl) ldiv(arg0:CLong, arg1:CLong) : ldiv_t;

external (cdecl) lldiv(arg0:CLongLong, arg1:CLongLong) : lldiv_t;

external (cdecl) ecvt(arg0:CDouble, arg1:CInt, arg2:Pointer[CInt], arg3:Pointer[CInt]) : Pointer[CChar];

external (cdecl) fcvt(arg0:CDouble, arg1:CInt, arg2:Pointer[CInt], arg3:Pointer[CInt]) : Pointer[CChar];

external (cdecl) gcvt(arg0:CDouble, arg1:CInt, arg2:Pointer[CChar]) : Pointer[CChar];

external (cdecl) qecvt(arg0:CLongDouble, arg1:CInt, arg2:Pointer[CInt], arg3:Pointer[CInt]) : Pointer[CChar];

external (cdecl) qfcvt(arg0:CLongDouble, arg1:CInt, arg2:Pointer[CInt], arg3:Pointer[CInt]) : Pointer[CChar];

external (cdecl) qgcvt(arg0:CLongDouble, arg1:CInt, arg2:Pointer[CChar]) : Pointer[CChar];

external (cdecl) ecvt_r(arg0:CDouble, arg1:CInt, arg2:Pointer[CInt], arg3:Pointer[CInt], arg4:Pointer[CChar], arg5:size_t) : CInt;

external (cdecl) fcvt_r(arg0:CDouble, arg1:CInt, arg2:Pointer[CInt], arg3:Pointer[CInt], arg4:Pointer[CChar], arg5:size_t) : CInt;

external (cdecl) qecvt_r(arg0:CLongDouble, arg1:CInt, arg2:Pointer[CInt], arg3:Pointer[CInt], arg4:Pointer[CChar], arg5:size_t) : CInt;

external (cdecl) qfcvt_r(arg0:CLongDouble, arg1:CInt, arg2:Pointer[CInt], arg3:Pointer[CInt], arg4:Pointer[CChar], arg5:size_t) : CInt;

external (cdecl) mblen(arg0:Pointer[CChar], arg1:size_t) : CInt;

external (cdecl) mbtowc(arg0:Pointer[wchar_t], arg1:Pointer[CChar], arg2:size_t) : CInt;

external (cdecl) wctomb(arg0:Pointer[CChar], arg1:wchar_t) : CInt;

external (cdecl) mbstowcs(arg0:Pointer[wchar_t], arg1:Pointer[CChar], arg2:size_t) : size_t;

external (cdecl) wcstombs(arg0:Pointer[CChar], arg1:Pointer[wchar_t], arg2:size_t) : size_t;

external (cdecl) rpmatch(arg0:Pointer[CChar]) : CInt;

external (cdecl) getsubopt(arg0:Pointer[Pointer[CChar]], arg1:Pointer[Pointer[CChar]], arg2:Pointer[Pointer[CChar]]) : CInt;

external (cdecl) getloadavg(arg0:Pointer[CDouble], arg1:CInt) : CInt;


alias in_port_t = uint16_t;


alias in_addr_t = uint32_t;

record Struct_in_addr (
    s_addr : in_addr_t,
);

record Struct_in6_addr (
    __in6_u : Union_Unnamed9,
);

external in6addr_any : Struct_in6_addr;

external in6addr_loopback : Struct_in6_addr;

record Struct_sockaddr_in (
    sin_family : sa_family_t,
    sin_port : in_port_t,
    sin_addr : Struct_in_addr,
    sin_zero : Array[CUChar, 8],
);

record Struct_sockaddr_in6 (
    sin6_family : sa_family_t,
    sin6_port : in_port_t,
    sin6_flowinfo : uint32_t,
    sin6_addr : Struct_in6_addr,
    sin6_scope_id : uint32_t,
);

record Struct_ip_mreq (
    imr_multiaddr : Struct_in_addr,
    imr_interface : Struct_in_addr,
);

record Struct_ip_mreq_source (
    imr_multiaddr : Struct_in_addr,
    imr_interface : Struct_in_addr,
    imr_sourceaddr : Struct_in_addr,
);

record Struct_ipv6_mreq (
    ipv6mr_multiaddr : Struct_in6_addr,
    ipv6mr_interface : CUInt,
);

record Struct_group_req (
    gr_interface : uint32_t,
    gr_group : Struct_sockaddr_storage,
);

record Struct_group_source_req (
    gsr_interface : uint32_t,
    gsr_group : Struct_sockaddr_storage,
    gsr_source : Struct_sockaddr_storage,
);

record Struct_ip_msfilter (
    imsf_multiaddr : Struct_in_addr,
    imsf_interface : Struct_in_addr,
    imsf_fmode : uint32_t,
    imsf_numsrc : uint32_t,
    imsf_slist : Array[Struct_in_addr, 1],
);

record Struct_group_filter (
    gf_interface : uint32_t,
    gf_group : Struct_sockaddr_storage,
    gf_fmode : uint32_t,
    gf_numsrc : uint32_t,
    gf_slist : Array[Struct_sockaddr_storage, 1],
);

record Struct_ip_opts (
    ip_dst : Struct_in_addr,
    ip_opts : Array[CChar, 40],
);

record Struct_ip_mreqn (
    imr_multiaddr : Struct_in_addr,
    imr_address : Struct_in_addr,
    imr_ifindex : CInt,
);

record Struct_in_pktinfo (
    ipi_ifindex : CInt,
    ipi_spec_dst : Struct_in_addr,
    ipi_addr : Struct_in_addr,
);

external (cdecl) ntohl(arg0:uint32_t) : uint32_t;

external (cdecl) ntohs(arg0:uint16_t) : uint16_t;

external (cdecl) htonl(arg0:uint32_t) : uint32_t;

external (cdecl) htons(arg0:uint16_t) : uint16_t;

external (cdecl) bindresvport(arg0:CInt, arg1:Pointer[Struct_sockaddr_in]) : CInt;

external (cdecl) bindresvport6(arg0:CInt, arg1:Pointer[Struct_sockaddr_in6]) : CInt;

record Struct_rpcent (
    r_name : Pointer[CChar],
    r_aliases : Pointer[Pointer[CChar]],
    r_number : CInt,
);

external (cdecl) setrpcent(arg0:CInt) : ;

external (cdecl) endrpcent() : ;

external (cdecl) getrpcbyname(arg0:Pointer[CChar]) : Pointer[Struct_rpcent];

external (cdecl) getrpcbynumber(arg0:CInt) : Pointer[Struct_rpcent];

external (cdecl) getrpcent() : Pointer[Struct_rpcent];

external (cdecl) getrpcbyname_r(arg0:Pointer[CChar], arg1:Pointer[Struct_rpcent], arg2:Pointer[CChar], arg3:size_t, arg4:Pointer[Pointer[Struct_rpcent]]) : CInt;

external (cdecl) getrpcbynumber_r(arg0:CInt, arg1:Pointer[Struct_rpcent], arg2:Pointer[CChar], arg3:size_t, arg4:Pointer[Pointer[Struct_rpcent]]) : CInt;

external (cdecl) getrpcent_r(arg0:Pointer[Struct_rpcent], arg1:Pointer[CChar], arg2:size_t, arg3:Pointer[Pointer[Struct_rpcent]]) : CInt;

record Struct_netent (
    n_name : Pointer[CChar],
    n_aliases : Pointer[Pointer[CChar]],
    n_addrtype : CInt,
    n_net : uint32_t,
);

external (cdecl) __h_errno_location() : Pointer[CInt];

external (cdecl) herror(arg0:Pointer[CChar]) : ;

external (cdecl) hstrerror(arg0:CInt) : Pointer[CChar];

record Struct_hostent (
    h_name : Pointer[CChar],
    h_aliases : Pointer[Pointer[CChar]],
    h_addrtype : CInt,
    h_length : CInt,
    h_addr_list : Pointer[Pointer[CChar]],
);

external (cdecl) sethostent(arg0:CInt) : ;

external (cdecl) endhostent() : ;

external (cdecl) gethostent() : Pointer[Struct_hostent];

external (cdecl) gethostbyaddr(arg0:OpaquePointer, arg1:__socklen_t, arg2:CInt) : Pointer[Struct_hostent];

external (cdecl) gethostbyname(arg0:Pointer[CChar]) : Pointer[Struct_hostent];

external (cdecl) gethostbyname2(arg0:Pointer[CChar], arg1:CInt) : Pointer[Struct_hostent];

external (cdecl) gethostent_r(arg0:Pointer[Struct_hostent], arg1:Pointer[CChar], arg2:size_t, arg3:Pointer[Pointer[Struct_hostent]], arg4:Pointer[CInt]) : CInt;

external (cdecl) gethostbyaddr_r(arg0:OpaquePointer, arg1:__socklen_t, arg2:CInt, arg3:Pointer[Struct_hostent], arg4:Pointer[CChar], arg5:size_t, arg6:Pointer[Pointer[Struct_hostent]], arg7:Pointer[CInt]) : CInt;

external (cdecl) gethostbyname_r(arg0:Pointer[CChar], arg1:Pointer[Struct_hostent], arg2:Pointer[CChar], arg3:size_t, arg4:Pointer[Pointer[Struct_hostent]], arg5:Pointer[CInt]) : CInt;

external (cdecl) gethostbyname2_r(arg0:Pointer[CChar], arg1:CInt, arg2:Pointer[Struct_hostent], arg3:Pointer[CChar], arg4:size_t, arg5:Pointer[Pointer[Struct_hostent]], arg6:Pointer[CInt]) : CInt;

external (cdecl) setnetent(arg0:CInt) : ;

external (cdecl) endnetent() : ;

external (cdecl) getnetent() : Pointer[Struct_netent];

external (cdecl) getnetbyaddr(arg0:uint32_t, arg1:CInt) : Pointer[Struct_netent];

external (cdecl) getnetbyname(arg0:Pointer[CChar]) : Pointer[Struct_netent];

external (cdecl) getnetent_r(arg0:Pointer[Struct_netent], arg1:Pointer[CChar], arg2:size_t, arg3:Pointer[Pointer[Struct_netent]], arg4:Pointer[CInt]) : CInt;

external (cdecl) getnetbyaddr_r(arg0:uint32_t, arg1:CInt, arg2:Pointer[Struct_netent], arg3:Pointer[CChar], arg4:size_t, arg5:Pointer[Pointer[Struct_netent]], arg6:Pointer[CInt]) : CInt;

external (cdecl) getnetbyname_r(arg0:Pointer[CChar], arg1:Pointer[Struct_netent], arg2:Pointer[CChar], arg3:size_t, arg4:Pointer[Pointer[Struct_netent]], arg5:Pointer[CInt]) : CInt;

record Struct_servent (
    s_name : Pointer[CChar],
    s_aliases : Pointer[Pointer[CChar]],
    s_port : CInt,
    s_proto : Pointer[CChar],
);

external (cdecl) setservent(arg0:CInt) : ;

external (cdecl) endservent() : ;

external (cdecl) getservent() : Pointer[Struct_servent];

external (cdecl) getservbyname(arg0:Pointer[CChar], arg1:Pointer[CChar]) : Pointer[Struct_servent];

external (cdecl) getservbyport(arg0:CInt, arg1:Pointer[CChar]) : Pointer[Struct_servent];

external (cdecl) getservent_r(arg0:Pointer[Struct_servent], arg1:Pointer[CChar], arg2:size_t, arg3:Pointer[Pointer[Struct_servent]]) : CInt;

external (cdecl) getservbyname_r(arg0:Pointer[CChar], arg1:Pointer[CChar], arg2:Pointer[Struct_servent], arg3:Pointer[CChar], arg4:size_t, arg5:Pointer[Pointer[Struct_servent]]) : CInt;

external (cdecl) getservbyport_r(arg0:CInt, arg1:Pointer[CChar], arg2:Pointer[Struct_servent], arg3:Pointer[CChar], arg4:size_t, arg5:Pointer[Pointer[Struct_servent]]) : CInt;

record Struct_protoent (
    p_name : Pointer[CChar],
    p_aliases : Pointer[Pointer[CChar]],
    p_proto : CInt,
);

external (cdecl) setprotoent(arg0:CInt) : ;

external (cdecl) endprotoent() : ;

external (cdecl) getprotoent() : Pointer[Struct_protoent];

external (cdecl) getprotobyname(arg0:Pointer[CChar]) : Pointer[Struct_protoent];

external (cdecl) getprotobynumber(arg0:CInt) : Pointer[Struct_protoent];

external (cdecl) getprotoent_r(arg0:Pointer[Struct_protoent], arg1:Pointer[CChar], arg2:size_t, arg3:Pointer[Pointer[Struct_protoent]]) : CInt;

external (cdecl) getprotobyname_r(arg0:Pointer[CChar], arg1:Pointer[Struct_protoent], arg2:Pointer[CChar], arg3:size_t, arg4:Pointer[Pointer[Struct_protoent]]) : CInt;

external (cdecl) getprotobynumber_r(arg0:CInt, arg1:Pointer[Struct_protoent], arg2:Pointer[CChar], arg3:size_t, arg4:Pointer[Pointer[Struct_protoent]]) : CInt;

external (cdecl) setnetgrent(arg0:Pointer[CChar]) : CInt;

external (cdecl) endnetgrent() : ;

external (cdecl) getnetgrent(arg0:Pointer[Pointer[CChar]], arg1:Pointer[Pointer[CChar]], arg2:Pointer[Pointer[CChar]]) : CInt;

external (cdecl) innetgr(arg0:Pointer[CChar], arg1:Pointer[CChar], arg2:Pointer[CChar], arg3:Pointer[CChar]) : CInt;

external (cdecl) getnetgrent_r(arg0:Pointer[Pointer[CChar]], arg1:Pointer[Pointer[CChar]], arg2:Pointer[Pointer[CChar]], arg3:Pointer[CChar], arg4:size_t) : CInt;

external (cdecl) rcmd(arg0:Pointer[Pointer[CChar]], arg1:CUShort, arg2:Pointer[CChar], arg3:Pointer[CChar], arg4:Pointer[CChar], arg5:Pointer[CInt]) : CInt;

external (cdecl) rcmd_af(arg0:Pointer[Pointer[CChar]], arg1:CUShort, arg2:Pointer[CChar], arg3:Pointer[CChar], arg4:Pointer[CChar], arg5:Pointer[CInt], arg6:sa_family_t) : CInt;

external (cdecl) rexec(arg0:Pointer[Pointer[CChar]], arg1:CInt, arg2:Pointer[CChar], arg3:Pointer[CChar], arg4:Pointer[CChar], arg5:Pointer[CInt]) : CInt;

external (cdecl) rexec_af(arg0:Pointer[Pointer[CChar]], arg1:CInt, arg2:Pointer[CChar], arg3:Pointer[CChar], arg4:Pointer[CChar], arg5:Pointer[CInt], arg6:sa_family_t) : CInt;

external (cdecl) ruserok(arg0:Pointer[CChar], arg1:CInt, arg2:Pointer[CChar], arg3:Pointer[CChar]) : CInt;

external (cdecl) ruserok_af(arg0:Pointer[CChar], arg1:CInt, arg2:Pointer[CChar], arg3:Pointer[CChar], arg4:sa_family_t) : CInt;

external (cdecl) iruserok(arg0:uint32_t, arg1:CInt, arg2:Pointer[CChar], arg3:Pointer[CChar]) : CInt;

external (cdecl) iruserok_af(arg0:OpaquePointer, arg1:CInt, arg2:Pointer[CChar], arg3:Pointer[CChar], arg4:sa_family_t) : CInt;

external (cdecl) rresvport(arg0:Pointer[CInt]) : CInt;

external (cdecl) rresvport_af(arg0:Pointer[CInt], arg1:sa_family_t) : CInt;

record Struct_addrinfo (
    ai_flags : CInt,
    ai_family : CInt,
    ai_socktype : CInt,
    ai_protocol : CInt,
    ai_addrlen : socklen_t,
    ai_addr : Pointer[Struct_sockaddr],
    ai_canonname : Pointer[CChar],
    ai_next : Pointer[Struct_addrinfo],
);

external (cdecl) getaddrinfo(arg0:Pointer[CChar], arg1:Pointer[CChar], arg2:Pointer[Struct_addrinfo], arg3:Pointer[Pointer[Struct_addrinfo]]) : CInt;

external (cdecl) freeaddrinfo(arg0:Pointer[Struct_addrinfo]) : ;

external (cdecl) gai_strerror(arg0:CInt) : Pointer[CChar];

external (cdecl) getnameinfo(arg0:Pointer[Struct_sockaddr], arg1:socklen_t, arg2:Pointer[CChar], arg3:socklen_t, arg4:Pointer[CChar], arg5:socklen_t, arg6:CInt) : CInt;

external (cdecl) _dl_mcount_wrapper_check(arg0:OpaquePointer) : ;

alias Lmid_t = CLong;

external (cdecl) dlopen(arg0:Pointer[CChar], arg1:CInt) : OpaquePointer;

external (cdecl) dlclose(arg0:OpaquePointer) : CInt;

external (cdecl) dlsym(arg0:OpaquePointer, arg1:Pointer[CChar]) : OpaquePointer;

external (cdecl) dlmopen(arg0:Lmid_t, arg1:Pointer[CChar], arg2:CInt) : OpaquePointer;

external (cdecl) dlvsym(arg0:OpaquePointer, arg1:Pointer[CChar], arg2:Pointer[CChar]) : OpaquePointer;

external (cdecl) dlerror() : Pointer[CChar];

record Dl_info (
    dli_fname : Pointer[CChar],
    dli_fbase : OpaquePointer,
    dli_sname : Pointer[CChar],
    dli_saddr : OpaquePointer,
);

external (cdecl) dladdr(arg0:OpaquePointer, arg1:Pointer[Dl_info]) : CInt;

external (cdecl) dladdr1(arg0:OpaquePointer, arg1:Pointer[Dl_info], arg2:Pointer[OpaquePointer], arg3:CInt) : CInt;


external (cdecl) dlinfo(arg0:OpaquePointer, arg1:CInt, arg2:OpaquePointer) : CInt;


record Dl_serpath (
    dls_name : Pointer[CChar],
    dls_flags : CUInt,
);

record Dl_serinfo (
    dls_size : size_t,
    dls_cnt : CUInt,
    dls_serpath : Array[Dl_serpath, 1],
);

alias Enum_Unnamed10 = CUInt;
alias IPPORT_ECHO = CUInt(7);
alias IPPORT_DISCARD = CUInt(9);
alias IPPORT_SYSTAT = CUInt(11);
alias IPPORT_DAYTIME = CUInt(13);
alias IPPORT_NETSTAT = CUInt(15);
alias IPPORT_FTP = CUInt(21);
alias IPPORT_TELNET = CUInt(23);
alias IPPORT_SMTP = CUInt(25);
alias IPPORT_TIMESERVER = CUInt(37);
alias IPPORT_NAMESERVER = CUInt(42);
alias IPPORT_WHOIS = CUInt(43);
alias IPPORT_MTP = CUInt(57);
alias IPPORT_TFTP = CUInt(69);
alias IPPORT_RJE = CUInt(77);
alias IPPORT_FINGER = CUInt(79);
alias IPPORT_TTYLINK = CUInt(87);
alias IPPORT_SUPDUP = CUInt(95);
alias IPPORT_EXECSERVER = CUInt(512);
alias IPPORT_LOGINSERVER = CUInt(513);
alias IPPORT_CMDSERVER = CUInt(514);
alias IPPORT_EFSSERVER = CUInt(520);
alias IPPORT_BIFFUDP = CUInt(512);
alias IPPORT_WHOSERVER = CUInt(513);
alias IPPORT_ROUTESERVER = CUInt(520);
alias IPPORT_RESERVED = CUInt(1024);
alias IPPORT_USERRESERVED = CUInt(5000);

alias Enum_Unnamed11 = CUInt;
alias PTHREAD_RWLOCK_PREFER_READER_NP = CUInt(0);
alias PTHREAD_RWLOCK_PREFER_WRITER_NP = CUInt(1);
alias PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP = CUInt(2);
alias PTHREAD_RWLOCK_DEFAULT_NP = CUInt(0);

alias Enum_Unnamed12 = CUInt;
alias ILL_ILLOPC = CUInt(1);
alias ILL_ILLOPN = CUInt(2);
alias ILL_ILLADR = CUInt(3);
alias ILL_ILLTRP = CUInt(4);
alias ILL_PRVOPC = CUInt(5);
alias ILL_PRVREG = CUInt(6);
alias ILL_COPROC = CUInt(7);
alias ILL_BADSTK = CUInt(8);

record Struct_Unnamed13 (
    si_pid : __pid_t,
    si_uid : __uid_t,
    si_sigval : sigval_t,
);

alias Enum_Unnamed14 = CUInt;
alias RTLD_DL_SYMENT = CUInt(1);
alias RTLD_DL_LINKMAP = CUInt(2);

alias Enum_Unnamed15 = CUInt;
alias IPPROTO_IP = CUInt(0);
alias IPPROTO_HOPOPTS = CUInt(0);
alias IPPROTO_ICMP = CUInt(1);
alias IPPROTO_IGMP = CUInt(2);
alias IPPROTO_IPIP = CUInt(4);
alias IPPROTO_TCP = CUInt(6);
alias IPPROTO_EGP = CUInt(8);
alias IPPROTO_PUP = CUInt(12);
alias IPPROTO_UDP = CUInt(17);
alias IPPROTO_IDP = CUInt(22);
alias IPPROTO_TP = CUInt(29);
alias IPPROTO_DCCP = CUInt(33);
alias IPPROTO_IPV6 = CUInt(41);
alias IPPROTO_ROUTING = CUInt(43);
alias IPPROTO_FRAGMENT = CUInt(44);
alias IPPROTO_RSVP = CUInt(46);
alias IPPROTO_GRE = CUInt(47);
alias IPPROTO_ESP = CUInt(50);
alias IPPROTO_AH = CUInt(51);
alias IPPROTO_ICMPV6 = CUInt(58);
alias IPPROTO_NONE = CUInt(59);
alias IPPROTO_DSTOPTS = CUInt(60);
alias IPPROTO_MTP = CUInt(92);
alias IPPROTO_ENCAP = CUInt(98);
alias IPPROTO_PIM = CUInt(103);
alias IPPROTO_COMP = CUInt(108);
alias IPPROTO_SCTP = CUInt(132);
alias IPPROTO_UDPLITE = CUInt(136);
alias IPPROTO_RAW = CUInt(255);
alias IPPROTO_MAX = CUInt(256);

alias Enum_Unnamed16 = CUInt;
alias EPOLL_CLOEXEC = CUInt(524288);
alias EPOLL_NONBLOCK = CUInt(2048);

alias Enum_Unnamed17 = CUInt;
alias SIGEV_SIGNAL = CUInt(0);
alias SIGEV_NONE = CUInt(1);
alias SIGEV_THREAD = CUInt(2);
alias SIGEV_THREAD_ID = CUInt(4);

alias Enum_Unnamed18 = CUInt;
alias PTHREAD_SCOPE_SYSTEM = CUInt(0);
alias PTHREAD_SCOPE_PROCESS = CUInt(1);

alias Enum_Unnamed19 = CUInt;
alias _SC_ARG_MAX = CUInt(0);
alias _SC_CHILD_MAX = CUInt(1);
alias _SC_CLK_TCK = CUInt(2);
alias _SC_NGROUPS_MAX = CUInt(3);
alias _SC_OPEN_MAX = CUInt(4);
alias _SC_STREAM_MAX = CUInt(5);
alias _SC_TZNAME_MAX = CUInt(6);
alias _SC_JOB_CONTROL = CUInt(7);
alias _SC_SAVED_IDS = CUInt(8);
alias _SC_REALTIME_SIGNALS = CUInt(9);
alias _SC_PRIORITY_SCHEDULING = CUInt(10);
alias _SC_TIMERS = CUInt(11);
alias _SC_ASYNCHRONOUS_IO = CUInt(12);
alias _SC_PRIORITIZED_IO = CUInt(13);
alias _SC_SYNCHRONIZED_IO = CUInt(14);
alias _SC_FSYNC = CUInt(15);
alias _SC_MAPPED_FILES = CUInt(16);
alias _SC_MEMLOCK = CUInt(17);
alias _SC_MEMLOCK_RANGE = CUInt(18);
alias _SC_MEMORY_PROTECTION = CUInt(19);
alias _SC_MESSAGE_PASSING = CUInt(20);
alias _SC_SEMAPHORES = CUInt(21);
alias _SC_SHARED_MEMORY_OBJECTS = CUInt(22);
alias _SC_AIO_LISTIO_MAX = CUInt(23);
alias _SC_AIO_MAX = CUInt(24);
alias _SC_AIO_PRIO_DELTA_MAX = CUInt(25);
alias _SC_DELAYTIMER_MAX = CUInt(26);
alias _SC_MQ_OPEN_MAX = CUInt(27);
alias _SC_MQ_PRIO_MAX = CUInt(28);
alias _SC_VERSION = CUInt(29);
alias _SC_PAGESIZE = CUInt(30);
alias _SC_RTSIG_MAX = CUInt(31);
alias _SC_SEM_NSEMS_MAX = CUInt(32);
alias _SC_SEM_VALUE_MAX = CUInt(33);
alias _SC_SIGQUEUE_MAX = CUInt(34);
alias _SC_TIMER_MAX = CUInt(35);
alias _SC_BC_BASE_MAX = CUInt(36);
alias _SC_BC_DIM_MAX = CUInt(37);
alias _SC_BC_SCALE_MAX = CUInt(38);
alias _SC_BC_STRING_MAX = CUInt(39);
alias _SC_COLL_WEIGHTS_MAX = CUInt(40);
alias _SC_EQUIV_CLASS_MAX = CUInt(41);
alias _SC_EXPR_NEST_MAX = CUInt(42);
alias _SC_LINE_MAX = CUInt(43);
alias _SC_RE_DUP_MAX = CUInt(44);
alias _SC_CHARCLASS_NAME_MAX = CUInt(45);
alias _SC_2_VERSION = CUInt(46);
alias _SC_2_C_BIND = CUInt(47);
alias _SC_2_C_DEV = CUInt(48);
alias _SC_2_FORT_DEV = CUInt(49);
alias _SC_2_FORT_RUN = CUInt(50);
alias _SC_2_SW_DEV = CUInt(51);
alias _SC_2_LOCALEDEF = CUInt(52);
alias _SC_PII = CUInt(53);
alias _SC_PII_XTI = CUInt(54);
alias _SC_PII_SOCKET = CUInt(55);
alias _SC_PII_INTERNET = CUInt(56);
alias _SC_PII_OSI = CUInt(57);
alias _SC_POLL = CUInt(58);
alias _SC_SELECT = CUInt(59);
alias _SC_UIO_MAXIOV = CUInt(60);
alias _SC_IOV_MAX = CUInt(60);
alias _SC_PII_INTERNET_STREAM = CUInt(61);
alias _SC_PII_INTERNET_DGRAM = CUInt(62);
alias _SC_PII_OSI_COTS = CUInt(63);
alias _SC_PII_OSI_CLTS = CUInt(64);
alias _SC_PII_OSI_M = CUInt(65);
alias _SC_T_IOV_MAX = CUInt(66);
alias _SC_THREADS = CUInt(67);
alias _SC_THREAD_SAFE_FUNCTIONS = CUInt(68);
alias _SC_GETGR_R_SIZE_MAX = CUInt(69);
alias _SC_GETPW_R_SIZE_MAX = CUInt(70);
alias _SC_LOGIN_NAME_MAX = CUInt(71);
alias _SC_TTY_NAME_MAX = CUInt(72);
alias _SC_THREAD_DESTRUCTOR_ITERATIONS = CUInt(73);
alias _SC_THREAD_KEYS_MAX = CUInt(74);
alias _SC_THREAD_STACK_MIN = CUInt(75);
alias _SC_THREAD_THREADS_MAX = CUInt(76);
alias _SC_THREAD_ATTR_STACKADDR = CUInt(77);
alias _SC_THREAD_ATTR_STACKSIZE = CUInt(78);
alias _SC_THREAD_PRIORITY_SCHEDULING = CUInt(79);
alias _SC_THREAD_PRIO_INHERIT = CUInt(80);
alias _SC_THREAD_PRIO_PROTECT = CUInt(81);
alias _SC_THREAD_PROCESS_SHARED = CUInt(82);
alias _SC_NPROCESSORS_CONF = CUInt(83);
alias _SC_NPROCESSORS_ONLN = CUInt(84);
alias _SC_PHYS_PAGES = CUInt(85);
alias _SC_AVPHYS_PAGES = CUInt(86);
alias _SC_ATEXIT_MAX = CUInt(87);
alias _SC_PASS_MAX = CUInt(88);
alias _SC_XOPEN_VERSION = CUInt(89);
alias _SC_XOPEN_XCU_VERSION = CUInt(90);
alias _SC_XOPEN_UNIX = CUInt(91);
alias _SC_XOPEN_CRYPT = CUInt(92);
alias _SC_XOPEN_ENH_I18N = CUInt(93);
alias _SC_XOPEN_SHM = CUInt(94);
alias _SC_2_CHAR_TERM = CUInt(95);
alias _SC_2_C_VERSION = CUInt(96);
alias _SC_2_UPE = CUInt(97);
alias _SC_XOPEN_XPG2 = CUInt(98);
alias _SC_XOPEN_XPG3 = CUInt(99);
alias _SC_XOPEN_XPG4 = CUInt(100);
alias _SC_CHAR_BIT = CUInt(101);
alias _SC_CHAR_MAX = CUInt(102);
alias _SC_CHAR_MIN = CUInt(103);
alias _SC_INT_MAX = CUInt(104);
alias _SC_INT_MIN = CUInt(105);
alias _SC_LONG_BIT = CUInt(106);
alias _SC_WORD_BIT = CUInt(107);
alias _SC_MB_LEN_MAX = CUInt(108);
alias _SC_NZERO = CUInt(109);
alias _SC_SSIZE_MAX = CUInt(110);
alias _SC_SCHAR_MAX = CUInt(111);
alias _SC_SCHAR_MIN = CUInt(112);
alias _SC_SHRT_MAX = CUInt(113);
alias _SC_SHRT_MIN = CUInt(114);
alias _SC_UCHAR_MAX = CUInt(115);
alias _SC_UINT_MAX = CUInt(116);
alias _SC_ULONG_MAX = CUInt(117);
alias _SC_USHRT_MAX = CUInt(118);
alias _SC_NL_ARGMAX = CUInt(119);
alias _SC_NL_LANGMAX = CUInt(120);
alias _SC_NL_MSGMAX = CUInt(121);
alias _SC_NL_NMAX = CUInt(122);
alias _SC_NL_SETMAX = CUInt(123);
alias _SC_NL_TEXTMAX = CUInt(124);
alias _SC_XBS5_ILP32_OFF32 = CUInt(125);
alias _SC_XBS5_ILP32_OFFBIG = CUInt(126);
alias _SC_XBS5_LP64_OFF64 = CUInt(127);
alias _SC_XBS5_LPBIG_OFFBIG = CUInt(128);
alias _SC_XOPEN_LEGACY = CUInt(129);
alias _SC_XOPEN_REALTIME = CUInt(130);
alias _SC_XOPEN_REALTIME_THREADS = CUInt(131);
alias _SC_ADVISORY_INFO = CUInt(132);
alias _SC_BARRIERS = CUInt(133);
alias _SC_BASE = CUInt(134);
alias _SC_C_LANG_SUPPORT = CUInt(135);
alias _SC_C_LANG_SUPPORT_R = CUInt(136);
alias _SC_CLOCK_SELECTION = CUInt(137);
alias _SC_CPUTIME = CUInt(138);
alias _SC_THREAD_CPUTIME = CUInt(139);
alias _SC_DEVICE_IO = CUInt(140);
alias _SC_DEVICE_SPECIFIC = CUInt(141);
alias _SC_DEVICE_SPECIFIC_R = CUInt(142);
alias _SC_FD_MGMT = CUInt(143);
alias _SC_FIFO = CUInt(144);
alias _SC_PIPE = CUInt(145);
alias _SC_FILE_ATTRIBUTES = CUInt(146);
alias _SC_FILE_LOCKING = CUInt(147);
alias _SC_FILE_SYSTEM = CUInt(148);
alias _SC_MONOTONIC_CLOCK = CUInt(149);
alias _SC_MULTI_PROCESS = CUInt(150);
alias _SC_SINGLE_PROCESS = CUInt(151);
alias _SC_NETWORKING = CUInt(152);
alias _SC_READER_WRITER_LOCKS = CUInt(153);
alias _SC_SPIN_LOCKS = CUInt(154);
alias _SC_REGEXP = CUInt(155);
alias _SC_REGEX_VERSION = CUInt(156);
alias _SC_SHELL = CUInt(157);
alias _SC_SIGNALS = CUInt(158);
alias _SC_SPAWN = CUInt(159);
alias _SC_SPORADIC_SERVER = CUInt(160);
alias _SC_THREAD_SPORADIC_SERVER = CUInt(161);
alias _SC_SYSTEM_DATABASE = CUInt(162);
alias _SC_SYSTEM_DATABASE_R = CUInt(163);
alias _SC_TIMEOUTS = CUInt(164);
alias _SC_TYPED_MEMORY_OBJECTS = CUInt(165);
alias _SC_USER_GROUPS = CUInt(166);
alias _SC_USER_GROUPS_R = CUInt(167);
alias _SC_2_PBS = CUInt(168);
alias _SC_2_PBS_ACCOUNTING = CUInt(169);
alias _SC_2_PBS_LOCATE = CUInt(170);
alias _SC_2_PBS_MESSAGE = CUInt(171);
alias _SC_2_PBS_TRACK = CUInt(172);
alias _SC_SYMLOOP_MAX = CUInt(173);
alias _SC_STREAMS = CUInt(174);
alias _SC_2_PBS_CHECKPOINT = CUInt(175);
alias _SC_V6_ILP32_OFF32 = CUInt(176);
alias _SC_V6_ILP32_OFFBIG = CUInt(177);
alias _SC_V6_LP64_OFF64 = CUInt(178);
alias _SC_V6_LPBIG_OFFBIG = CUInt(179);
alias _SC_HOST_NAME_MAX = CUInt(180);
alias _SC_TRACE = CUInt(181);
alias _SC_TRACE_EVENT_FILTER = CUInt(182);
alias _SC_TRACE_INHERIT = CUInt(183);
alias _SC_TRACE_LOG = CUInt(184);
alias _SC_LEVEL1_ICACHE_SIZE = CUInt(185);
alias _SC_LEVEL1_ICACHE_ASSOC = CUInt(186);
alias _SC_LEVEL1_ICACHE_LINESIZE = CUInt(187);
alias _SC_LEVEL1_DCACHE_SIZE = CUInt(188);
alias _SC_LEVEL1_DCACHE_ASSOC = CUInt(189);
alias _SC_LEVEL1_DCACHE_LINESIZE = CUInt(190);
alias _SC_LEVEL2_CACHE_SIZE = CUInt(191);
alias _SC_LEVEL2_CACHE_ASSOC = CUInt(192);
alias _SC_LEVEL2_CACHE_LINESIZE = CUInt(193);
alias _SC_LEVEL3_CACHE_SIZE = CUInt(194);
alias _SC_LEVEL3_CACHE_ASSOC = CUInt(195);
alias _SC_LEVEL3_CACHE_LINESIZE = CUInt(196);
alias _SC_LEVEL4_CACHE_SIZE = CUInt(197);
alias _SC_LEVEL4_CACHE_ASSOC = CUInt(198);
alias _SC_LEVEL4_CACHE_LINESIZE = CUInt(199);
alias _SC_IPV6 = CUInt(235);
alias _SC_RAW_SOCKETS = CUInt(236);
alias _SC_V7_ILP32_OFF32 = CUInt(237);
alias _SC_V7_ILP32_OFFBIG = CUInt(238);
alias _SC_V7_LP64_OFF64 = CUInt(239);
alias _SC_V7_LPBIG_OFFBIG = CUInt(240);
alias _SC_SS_REPL_MAX = CUInt(241);
alias _SC_TRACE_EVENT_NAME_MAX = CUInt(242);
alias _SC_TRACE_NAME_MAX = CUInt(243);
alias _SC_TRACE_SYS_MAX = CUInt(244);
alias _SC_TRACE_USER_EVENT_MAX = CUInt(245);
alias _SC_XOPEN_STREAMS = CUInt(246);
alias _SC_THREAD_ROBUST_PRIO_INHERIT = CUInt(247);
alias _SC_THREAD_ROBUST_PRIO_PROTECT = CUInt(248);

alias Enum_Unnamed20 = CUInt;
alias POLL_IN = CUInt(1);
alias POLL_OUT = CUInt(2);
alias POLL_MSG = CUInt(3);
alias POLL_ERR = CUInt(4);
alias POLL_PRI = CUInt(5);
alias POLL_HUP = CUInt(6);

alias Union_Unnamed9 = Union[
     Array[uint8_t, 16],
     Array[uint16_t, 8],
     Array[uint32_t, 4],
];

alias Enum_Unnamed21 = CUInt;
alias SS_ONSTACK = CUInt(1);
alias SS_DISABLE = CUInt(2);

alias Enum_Unnamed22 = CUInt;
alias PTHREAD_CANCEL_ENABLE = CUInt(0);
alias PTHREAD_CANCEL_DISABLE = CUInt(1);

alias Enum_Unnamed23 = CUInt;
alias PTHREAD_PRIO_NONE = CUInt(0);
alias PTHREAD_PRIO_INHERIT = CUInt(1);
alias PTHREAD_PRIO_PROTECT = CUInt(2);

alias Enum_Unnamed24 = CUInt;
alias _CS_PATH = CUInt(0);
alias _CS_V6_WIDTH_RESTRICTED_ENVS = CUInt(1);
alias _CS_GNU_LIBC_VERSION = CUInt(2);
alias _CS_GNU_LIBPTHREAD_VERSION = CUInt(3);
alias _CS_V5_WIDTH_RESTRICTED_ENVS = CUInt(4);
alias _CS_V7_WIDTH_RESTRICTED_ENVS = CUInt(5);
alias _CS_LFS_CFLAGS = CUInt(1000);
alias _CS_LFS_LDFLAGS = CUInt(1001);
alias _CS_LFS_LIBS = CUInt(1002);
alias _CS_LFS_LINTFLAGS = CUInt(1003);
alias _CS_LFS64_CFLAGS = CUInt(1004);
alias _CS_LFS64_LDFLAGS = CUInt(1005);
alias _CS_LFS64_LIBS = CUInt(1006);
alias _CS_LFS64_LINTFLAGS = CUInt(1007);
alias _CS_XBS5_ILP32_OFF32_CFLAGS = CUInt(1100);
alias _CS_XBS5_ILP32_OFF32_LDFLAGS = CUInt(1101);
alias _CS_XBS5_ILP32_OFF32_LIBS = CUInt(1102);
alias _CS_XBS5_ILP32_OFF32_LINTFLAGS = CUInt(1103);
alias _CS_XBS5_ILP32_OFFBIG_CFLAGS = CUInt(1104);
alias _CS_XBS5_ILP32_OFFBIG_LDFLAGS = CUInt(1105);
alias _CS_XBS5_ILP32_OFFBIG_LIBS = CUInt(1106);
alias _CS_XBS5_ILP32_OFFBIG_LINTFLAGS = CUInt(1107);
alias _CS_XBS5_LP64_OFF64_CFLAGS = CUInt(1108);
alias _CS_XBS5_LP64_OFF64_LDFLAGS = CUInt(1109);
alias _CS_XBS5_LP64_OFF64_LIBS = CUInt(1110);
alias _CS_XBS5_LP64_OFF64_LINTFLAGS = CUInt(1111);
alias _CS_XBS5_LPBIG_OFFBIG_CFLAGS = CUInt(1112);
alias _CS_XBS5_LPBIG_OFFBIG_LDFLAGS = CUInt(1113);
alias _CS_XBS5_LPBIG_OFFBIG_LIBS = CUInt(1114);
alias _CS_XBS5_LPBIG_OFFBIG_LINTFLAGS = CUInt(1115);
alias _CS_POSIX_V6_ILP32_OFF32_CFLAGS = CUInt(1116);
alias _CS_POSIX_V6_ILP32_OFF32_LDFLAGS = CUInt(1117);
alias _CS_POSIX_V6_ILP32_OFF32_LIBS = CUInt(1118);
alias _CS_POSIX_V6_ILP32_OFF32_LINTFLAGS = CUInt(1119);
alias _CS_POSIX_V6_ILP32_OFFBIG_CFLAGS = CUInt(1120);
alias _CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS = CUInt(1121);
alias _CS_POSIX_V6_ILP32_OFFBIG_LIBS = CUInt(1122);
alias _CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS = CUInt(1123);
alias _CS_POSIX_V6_LP64_OFF64_CFLAGS = CUInt(1124);
alias _CS_POSIX_V6_LP64_OFF64_LDFLAGS = CUInt(1125);
alias _CS_POSIX_V6_LP64_OFF64_LIBS = CUInt(1126);
alias _CS_POSIX_V6_LP64_OFF64_LINTFLAGS = CUInt(1127);
alias _CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS = CUInt(1128);
alias _CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS = CUInt(1129);
alias _CS_POSIX_V6_LPBIG_OFFBIG_LIBS = CUInt(1130);
alias _CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS = CUInt(1131);
alias _CS_POSIX_V7_ILP32_OFF32_CFLAGS = CUInt(1132);
alias _CS_POSIX_V7_ILP32_OFF32_LDFLAGS = CUInt(1133);
alias _CS_POSIX_V7_ILP32_OFF32_LIBS = CUInt(1134);
alias _CS_POSIX_V7_ILP32_OFF32_LINTFLAGS = CUInt(1135);
alias _CS_POSIX_V7_ILP32_OFFBIG_CFLAGS = CUInt(1136);
alias _CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS = CUInt(1137);
alias _CS_POSIX_V7_ILP32_OFFBIG_LIBS = CUInt(1138);
alias _CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS = CUInt(1139);
alias _CS_POSIX_V7_LP64_OFF64_CFLAGS = CUInt(1140);
alias _CS_POSIX_V7_LP64_OFF64_LDFLAGS = CUInt(1141);
alias _CS_POSIX_V7_LP64_OFF64_LIBS = CUInt(1142);
alias _CS_POSIX_V7_LP64_OFF64_LINTFLAGS = CUInt(1143);
alias _CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS = CUInt(1144);
alias _CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS = CUInt(1145);
alias _CS_POSIX_V7_LPBIG_OFFBIG_LIBS = CUInt(1146);
alias _CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS = CUInt(1147);
alias _CS_V6_ENV = CUInt(1148);
alias _CS_V7_ENV = CUInt(1149);

alias Union_Unnamed25 = Union[
     Pointer[Struct__fpstate],
     __uint64_t,
];

record Struct_Unnamed1 (
    __lock : CInt,
    __futex : CUInt,
    __total_seq : CULongLong,
    __wakeup_seq : CULongLong,
    __woken_seq : CULongLong,
    __mutex : OpaquePointer,
    __nwaiters : CUInt,
    __broadcast_seq : CUInt,
);

record Struct_Unnamed3 (
    __cancel_jmp_buf : __jmp_buf,
    __mask_was_saved : CInt,
);

record Struct_Unnamed26 (
    si_pid : __pid_t,
    si_uid : __uid_t,
    si_status : CInt,
    si_utime : __sigchld_clock_t,
    si_stime : __sigchld_clock_t,
);

alias Enum_Unnamed27 = CUInt;
alias PTHREAD_CREATE_JOINABLE = CUInt(0);
alias PTHREAD_CREATE_DETACHED = CUInt(1);

alias Enum_Unnamed28 = CUInt;
alias FPE_INTDIV = CUInt(1);
alias FPE_INTOVF = CUInt(2);
alias FPE_FLTDIV = CUInt(3);
alias FPE_FLTOVF = CUInt(4);
alias FPE_FLTUND = CUInt(5);
alias FPE_FLTRES = CUInt(6);
alias FPE_FLTINV = CUInt(7);
alias FPE_FLTSUB = CUInt(8);

alias Enum_Unnamed29 = CUInt;
alias TRAP_BRKPT = CUInt(1);
alias TRAP_TRACE = CUInt(2);

alias Union_Unnamed5 = Union[
     Array[CInt, 12],
     __pid_t,
     Struct_Unnamed30,
];

record Struct_Unnamed7 (
    __w_termsig : CUInt,
    __w_coredump : CUInt,
    __w_retcode : CUInt,
    ?padding0 : CUInt,
);

alias Enum_Unnamed31 = CUInt;
alias PTHREAD_PROCESS_PRIVATE = CUInt(0);
alias PTHREAD_PROCESS_SHARED = CUInt(1);

alias Enum_Unnamed32 = CUInt;
alias SCM_RIGHTS = CUInt(1);

alias Enum_Unnamed33 = CUInt;
alias CLD_EXITED = CUInt(1);
alias CLD_KILLED = CUInt(2);
alias CLD_DUMPED = CUInt(3);
alias CLD_TRAPPED = CUInt(4);
alias CLD_STOPPED = CUInt(5);
alias CLD_CONTINUED = CUInt(6);

alias Union_Unnamed6 = Union[
     __sighandler_t,
     CCodePointer[[CInt, Pointer[siginfo_t], OpaquePointer],[]],
];

alias Union_Unnamed4 = Union[
     Array[CInt, 28],
     Struct_Unnamed34,
     Struct_Unnamed35,
     Struct_Unnamed13,
     Struct_Unnamed26,
     Struct_Unnamed36,
     Struct_Unnamed37,
];

record Struct_Unnamed34 (
    si_pid : __pid_t,
    si_uid : __uid_t,
);

record Struct_Unnamed35 (
    si_tid : CInt,
    si_overrun : CInt,
    si_sigval : sigval_t,
);

record Struct_Unnamed37 (
    si_band : CLong,
    si_fd : CInt,
);

alias Enum_Unnamed38 = CUInt;
alias RTLD_DI_LMID = CUInt(1);
alias RTLD_DI_LINKMAP = CUInt(2);
alias RTLD_DI_CONFIGADDR = CUInt(3);
alias RTLD_DI_SERINFO = CUInt(4);
alias RTLD_DI_SERINFOSIZE = CUInt(5);
alias RTLD_DI_ORIGIN = CUInt(6);
alias RTLD_DI_PROFILENAME = CUInt(7);
alias RTLD_DI_PROFILEOUT = CUInt(8);
alias RTLD_DI_TLS_MODID = CUInt(9);
alias RTLD_DI_TLS_DATA = CUInt(10);
alias RTLD_DI_MAX = CUInt(10);

alias Enum_Unnamed39 = CUInt;
alias _PC_LINK_MAX = CUInt(0);
alias _PC_MAX_CANON = CUInt(1);
alias _PC_MAX_INPUT = CUInt(2);
alias _PC_NAME_MAX = CUInt(3);
alias _PC_PATH_MAX = CUInt(4);
alias _PC_PIPE_BUF = CUInt(5);
alias _PC_CHOWN_RESTRICTED = CUInt(6);
alias _PC_NO_TRUNC = CUInt(7);
alias _PC_VDISABLE = CUInt(8);
alias _PC_SYNC_IO = CUInt(9);
alias _PC_ASYNC_IO = CUInt(10);
alias _PC_PRIO_IO = CUInt(11);
alias _PC_SOCK_MAXBUF = CUInt(12);
alias _PC_FILESIZEBITS = CUInt(13);
alias _PC_REC_INCR_XFER_SIZE = CUInt(14);
alias _PC_REC_MAX_XFER_SIZE = CUInt(15);
alias _PC_REC_MIN_XFER_SIZE = CUInt(16);
alias _PC_REC_XFER_ALIGN = CUInt(17);
alias _PC_ALLOC_SIZE_MIN = CUInt(18);
alias _PC_SYMLINK_MAX = CUInt(19);
alias _PC_2_SYMLINKS = CUInt(20);

alias Enum_Unnamed40 = CUInt;
alias PTHREAD_CANCEL_DEFERRED = CUInt(0);
alias PTHREAD_CANCEL_ASYNCHRONOUS = CUInt(1);

record Struct_Unnamed30 (
    _function : CCodePointer[[sigval_t],[]],
    _attribute : Pointer[pthread_attr_t],
);

alias Enum_Unnamed41 = CUInt;
alias PTHREAD_INHERIT_SCHED = CUInt(0);
alias PTHREAD_EXPLICIT_SCHED = CUInt(1);

alias Enum_Unnamed42 = CUInt;
alias PTHREAD_MUTEX_TIMED_NP = CUInt(0);
alias PTHREAD_MUTEX_RECURSIVE_NP = CUInt(1);
alias PTHREAD_MUTEX_ERRORCHECK_NP = CUInt(2);
alias PTHREAD_MUTEX_ADAPTIVE_NP = CUInt(3);
alias PTHREAD_MUTEX_NORMAL = CUInt(0);
alias PTHREAD_MUTEX_RECURSIVE = CUInt(1);
alias PTHREAD_MUTEX_ERRORCHECK = CUInt(2);
alias PTHREAD_MUTEX_DEFAULT = CUInt(0);

alias Enum_Unnamed43 = CUInt;
alias MSG_OOB = CUInt(1);
alias MSG_PEEK = CUInt(2);
alias MSG_DONTROUTE = CUInt(4);
alias MSG_CTRUNC = CUInt(8);
alias MSG_PROXY = CUInt(16);
alias MSG_TRUNC = CUInt(32);
alias MSG_DONTWAIT = CUInt(64);
alias MSG_EOR = CUInt(128);
alias MSG_WAITALL = CUInt(256);
alias MSG_FIN = CUInt(512);
alias MSG_SYN = CUInt(1024);
alias MSG_CONFIRM = CUInt(2048);
alias MSG_RST = CUInt(4096);
alias MSG_ERRQUEUE = CUInt(8192);
alias MSG_NOSIGNAL = CUInt(16384);
alias MSG_MORE = CUInt(32768);
alias MSG_WAITFORONE = CUInt(65536);
alias MSG_CMSG_CLOEXEC = CUInt(1073741824);

alias Enum_Unnamed44 = CUInt;
alias SEGV_MAPERR = CUInt(1);
alias SEGV_ACCERR = CUInt(2);

record Struct_Unnamed2 (
    __lock : CInt,
    __nr_readers : CUInt,
    __readers_wakeup : CUInt,
    __writer_wakeup : CUInt,
    __nr_readers_queued : CUInt,
    __nr_writers_queued : CUInt,
    __writer : CInt,
    __shared : CInt,
    __pad1 : CULong,
    __pad2 : CULong,
    __flags : CUInt,
);

record Struct_Unnamed36 (
    si_addr : OpaquePointer,
);

alias Enum_Unnamed45 = CUInt;
alias DT_UNKNOWN = CUInt(0);
alias DT_FIFO = CUInt(1);
alias DT_CHR = CUInt(2);
alias DT_DIR = CUInt(4);
alias DT_BLK = CUInt(6);
alias DT_REG = CUInt(8);
alias DT_LNK = CUInt(10);
alias DT_SOCK = CUInt(12);
alias DT_WHT = CUInt(14);

alias Enum_Unnamed46 = CUInt;
alias PTHREAD_MUTEX_STALLED = CUInt(0);
alias PTHREAD_MUTEX_STALLED_NP = CUInt(0);
alias PTHREAD_MUTEX_ROBUST = CUInt(1);
alias PTHREAD_MUTEX_ROBUST_NP = CUInt(1);

alias Enum_Unnamed47 = CUInt;
alias SHUT_RD = CUInt(0);
alias SHUT_WR = CUInt(1);
alias SHUT_RDWR = CUInt(2);

alias Enum_Unnamed48 = CInt;
alias SI_ASYNCNL = CInt(-60);
alias SI_TKILL = CInt(-6);
alias SI_SIGIO = CInt(-5);
alias SI_ASYNCIO = CInt(-4);
alias SI_MESGQ = CInt(-3);
alias SI_TIMER = CInt(-2);
alias SI_QUEUE = CInt(-1);
alias SI_USER = CInt(0);
alias SI_KERNEL = CInt(128);

alias Enum_Unnamed49 = CUInt;
alias BUS_ADRALN = CUInt(1);
alias BUS_ADRERR = CUInt(2);
alias BUS_OBJERR = CUInt(3);

record Struct_Unnamed8 (
    __w_stopval : CUInt,
    __w_stopsig : CUInt,
    ?padding0 : CUInt,
);

